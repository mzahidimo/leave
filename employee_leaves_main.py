from odoo import models, fields, api, _
from odoo.exceptions import UserError, ValidationError
import calendar
from datetime import date, datetime, timedelta
from dateutil.relativedelta import relativedelta
from lxml import etree
import json

def calculate_sanction_user(employee, configure_id):
    print('cccccc')
    if employee.user_id in configure_id.sanction_authority.user_ids:
        print('rrrrrrrrrrrrrrrrrrrrrrr', employee.user_id.name)
        return employee.user_id
    else:
        if employee.parent_id:
            return calculate_sanction_user(employee.parent_id, configure_id)
    # return False


def get_custom_chain_flow_req(user, chain_id):
    print('asdqqqqqqqqqqqqqqqqqqq')
    print(user.name, chain_id)
    for rec in chain_id:
        if user == rec.user_id:
            if rec.parent_id:
                return user, rec.parent_id.user_id
            else:
                return user, False
        elif rec.child_ids:
            return get_custom_chain_flow_req(user, rec.child_ids)
        else:
            return False, False


class EmployeeLeavesMain(models.Model):
    _name = 'cms.hr.emp.leaves.main'
    _description = 'Emaployee Main Leave Form'
    _inherit = ['mail.thread', 'mail.activity.mixin']
    _rec_name = 'faculty_staff_id'


    # @api.onchange('faculty_staff_id')
    # def _show_aar_scoring(self):
    #     if self.faculty_staff_id:
    #         aar_scoring = self.env['odoocms.hr.emp.aar'].sudo().search([('faculty_staff_id','=',self.faculty_staff_id.id)],limit=1, order= 'id desc')
    #         if aar_scoring:
    #             self.aar_id = aar_scoring.hr_emp_aar_score






    faculty_staff_id = fields.Many2one('odoocms.faculty.staff', 'Employee ID', required=True)
    aar_id = fields.Char('AAR Scoring', compute='_show_aar_scoring', store = True)
    aar_year = fields.Char('AAR Scoring Year', compute='_show_aar_scoring', store = True)
    projects_ipfp = fields.Char('Faculty Project', compute='_get_ipfp_project_faculty')
    category_id = fields.Selection('Category', related='faculty_staff_id.employee_category')
    support_staff_category_id = fields.Char('Support Staff Category', compute='_get_support_staff_category')
    father_name = fields.Char(related='faculty_staff_id.father_name', string="Father Name")
    designation = fields.Many2one(related='faculty_staff_id.designation', string="Designation")
    department_id = fields.Many2one(related='faculty_staff_id.department', string="Department")
    institute_id = fields.Many2one(related='faculty_staff_id.institute', string="School/College")
    leave_apply_for = fields.Selection([('FL', 'Fresh Leave'), ('LE', 'Leave Extension')], string='Applying For?',
                                       required=True, tracking=True)
    faculty_contract_type = fields.Char('Faculty Type', compute='_get_faculty_status_contract_regulars')

    @api.onchange('leave_ids')
    def _get_short_leaves_values(self):
        self.show_short_leave_button = False
        show_short_leave_button = False
        if self.leave_ids:
            for rec in self.leave_ids:
                if rec.leave_type_id.code == 'SHL':
                    show_short_leave_button = True
                self.show_short_leave_button = True

    show_short_leave_button = fields.Boolean(string="Show Short Leave Button")
    urgent_leave = fields.Boolean(string="Urgent Leave?", compute='_get_urgent_proces_flow')
    # urgent_leave = fields.Boolean(string="Urgent Leave?")
    urgent_leave_reason = fields.Text('Reason For Urgent leave')
    urgent_leave_support = fields.Boolean('Support Urgent Leave?')
    urgent_word_used = fields.Html(compute='_get_urgent_leave_tags')

    # @api.onchange('faculty_staff_id')
    # def _get_leave_domain(self):
    #     domain = [('id', '=', -1)]
    #     leaves = self.env['cms.hr.leave.type'].sudo().search([])
    #     leave_list = []
    #     for each in leaves:
    #         if not each.gender_specific:
    #             leave_list.append(each.id)
    #         else:
    #             if self.faculty_staff_id:
    #                 if each.gender == self.faculty_staff_id.gender:
    #                     leave_list.append(each.id)
    #     if leave_list:
    #         domain = [('id', 'in', leave_list)]
    #         res = {'domain': {'leave_type_id': domain}}
    #         return res
    #     res = {'domain': {'leave_type_id': domain}}
    #     return res
    #
    # @api.onchange('leave_type_id')
    # def _change_leave_type(self):
    #     for rec in self:
    #         if rec.leave_type_id:
    #             return {'domain': {
    #                 'purpose_id': [('leave_type.id', '=', rec.leave_type_id.id)]}}


    comment_ids = fields.One2many('cms.hr.emp.leave.comments', 'emp_leave_id')
    cancel_process_flow = fields.Boolean('Cancel Prosess', compute='_get_cancel_process')
    leave_conversion_states = fields.Boolean('Leave Conversion State', compute='_get_leave_conversion_state')

    state = fields.Selection(
        [('draft', 'Draft'),('cancel_draft', 'Cancel-Draft'), ('return', 'Return'), ('recommend', 'In Progress'),('cancel_recommend', 'Cancel In Progress'),('inprogress', 'In Process'),('cancel_inprogress', 'Cancel In Process'),('recommend1', 'Recommended-S1'),('recommend2', 'Recommended-S2'),('recommend3', 'Recommended-S3'),('recommend4', 'Recommended-S4'),('recommend5', 'Recommended-S5'),('recommend6', 'Recommended-S6'), ('sanction', 'Sanctioned'),
         ('availed', 'Availed'), ('cancel_recommend1', 'Cancel R-1'),('cancel_recommend2', 'Cancel R-2'), ('cancel_recommend3', 'Cancel R-3'),('cancel_recommend4', 'Cancel R-4'),('cancel_recommend5', 'Cancel R-5'),

         ('reject', 'Rejected'), ('cancel', 'Cancelled')],
        'Status', default='draft', tracking=True)

    @api.onchange('location')
    def _get_location_out(self):
        show_out_location_button = False
        if self.location == 'out':
            show_out_location_button = True
        self.show_out_location_button = show_out_location_button

    @api.onchange('location')
    def _get_location_local(self):
        show_local_location_button = False
        if self.location == 'local':
            show_local_location_button = True
        self.show_local_location_button = show_local_location_button

    @api.onchange('location')
    def _get_location_province(self):
        if self.location == 'local' or self.location == 'out':
            self.province_id = 28
            print('3333333333333333333333333')
            self.city_id = 1398
        else:
            print('4444444444444444444444444444444444')
            self.province_id = ''
            self.city_id = ''

    @api.onchange('location')
    def _location_dependency(self):
        if self.location == 'local' or self.location == 'out':
            self.country_id = 177
        else:
            self.country_id = ''

    @api.onchange('location')
    def _location_dependency_onabroad(self):
        abroad_section = False
        self.abroad_section = False
        if self.location == 'abroad':
            abroad_section = True
        self.abroad_section = abroad_section




    location = fields.Selection(
        [('local', 'Local'), ('out', 'Outstation'), ('abroad', 'Abroad')], 'Location', default='local', tracking=True)
    country_id = fields.Many2one('res.country', string='Country')


    province_id = fields.Many2one('odoocms.province', string='Province')
    city_id = fields.Many2one('odoocms.domicile', string='City',
                              domain="[('province_id', '=?', province_id)]")

    @api.onchange('faculty_staff_id')
    def _gets_facultys_bonds(self):
        # for rec in self:
        faculty_bond = self.env['odoocms.hr.emp.contract.renew'].sudo().search(
            [('faculty_staff_id', '=', self.faculty_staff_id.id), ('hr_emp_con_status', '=', 'A')])
        print('%%%%%%%%%%%%%%%%%%%%%%%%', faculty_bond)
        for bond in faculty_bond:
            # self.faculty_bond = bond.hr_emp_con_bond
            self.faculty_bond = dict(bond.fields_get(allfields=['hr_emp_con_bond'])['hr_emp_con_bond']['selection'])[
                bond.hr_emp_con_bond]

    @api.onchange('faculty_staff_id')
    def _gets_supervisions_counts(self):
        supervision_records = self.env['odoocms.rttm.thesis.form'].sudo().search_count(
            [('allocated_faculty_staff_id', '=', self.faculty_staff_id.id)])
        self.students_under_supervision = supervision_records

    @api.onchange('purpose_id')
    def _change_purpose(self):
        for rec in self:
            if rec.purpose_id:
                return {'domain': {
                    'sub_purpose_id': [('leave_sub_purposes.id', '=', rec.purpose_id.id)]}}

    @api.onchange('purpose_id')
    def _get_other_purpose(self):
        other_purpose_field = False
        self.other_purpose_field = False
        if self.purpose_id.code == 'other':
            other_purpose_field = True
        self.other_purpose_field = other_purpose_field

    @api.onchange('faculty_staff_id', 'leave_ids')
    def _getts_typess_of_facultyss(self):
        show_faculty_button = False
        self.show_faculty_button = False
        # leave_ids = self.env['combination.leaves.setup.conf'].sudo().search(
        #     [('leave_id.faculty_staff_id', '=', self.faculty_staff_id.id),
        #      ('leave_master_id.code', '=', 'EPL'),('leave_id','=',self.id)])
        if self.faculty_staff_id.employee_category == 'F':
            show_faculty_button = True
        self.show_faculty_button = show_faculty_button


    purpose_id = fields.Many2one('cms.hr.leave.purpose', string="Purpose of Leave", tracking=True)
    faculty_bond = fields.Char(string='Faculty Bond')
    faculty_bond_exp_date = fields.Date(related='faculty_staff_id.emp_con_id.hr_emp_con_end_dt')
    students_under_supervision = fields.Char('Students Under Supervision')
    show_faculty_button = fields.Boolean(string="Show Faculty Button")
    show_faculty_buttons = fields.Boolean(string="Show Faculty Button", compute='_getts_typess_of_facultysssss')



    sub_purpose_id = fields.Many2one('cms.hr.leave.type.sub.categories', string="Sub Purpose of Leave", tracking=True)
    leave_ids = fields.One2many('combination.leaves.setup.conf', 'leave_id', 'Apply Leaves')
    prev_user = fields.Many2one('res.users', string="Previous Position User",compute='send_leave_record', store=True)
    curr_user = fields.Many2one('res.users', string="Current Position User", compute='send_leave_record', store=True,
                                tracking=True)
    previouss_users = fields.Many2one('res.users', string="Previous User", compute='cancel_leave_record', store=True)
    currents_users = fields.Many2one('res.users', string="Current User", compute='cancel_leave_record', store=True,
                                tracking=True)
    sanction_user = fields.Many2one('cms.hr.leave.sanction.authority', 'Sanction User', compute='_get_custom_sanction_user', store = True, tracking=True)
    custom_chain_id = fields.Many2one('cms.hr.leave.user.tree', 'Custom flow', compute='_computes_configs', store = True)
    leave_type_id = fields.Many2one('cms.hr.leave.type', string='Prioritized Leave Type', compute='_get_related_leave_priority')
    # leave_type_id = fields.Many2one('cms.hr.leave.type', string='Related Leave Type')


    @api.onchange('abroad')
    def _abroad_dependency_onfamily(self):
        proceeding_abroad = False
        self.proceeding_abroad = False
        if self.abroad:
            proceeding_abroad = True
        self.proceeding_abroad = proceeding_abroad

    abroad = fields.Boolean(string='Proceeding Abroad with family?')
    emergency_name = fields.Char(string="name")
    emergency_relation = fields.Char(string="Relation with Applicant")
    emergency_contact = fields.Char(string="Contact No")
    passport_no = fields.Char(related='faculty_staff_id.passport_ids.passport_no',string="Passport No", store=True)
    passport_expiry = fields.Date(related='faculty_staff_id.passport_ids.date_expiry',string="Passport Expiry Date")
    passport_valid = fields.Date(string="Passport Validity Date")
    passport_scan = fields.Binary('Scanned Copy Passport along with signature page')
    foreign_leave_address1 = fields.Char(string="Foreign Address Line 1")
    foreign_leave_address2 = fields.Char(string="Foreign Address Line 2")
    foreign_email = fields.Char(string="Email")
    foreign_phone = fields.Char(string="Phone")
    foreign_fax = fields.Char(string="Fax")
    nust_accommodation = fields.Selection(
        [('yf', 'Yes, Family Accommodation'), ('ys', 'Yes, Single Accommodation'), ('n', 'No')],
        'Availing NUST Accommodation', default='n')
    family_ids = fields.One2many('cms.hr.emp.leave.family', 'family_leave_idd')
    visa_required = fields.Boolean(string='I need visa issuance letter for Embassy / High Commission')
    noc_required = fields.Boolean(string='I need No Objection Certificate for Travelling')
    visa_att = fields.Binary('Attach scanned copy of Issued Visa if already granted', tracking=True, attachment=True)
    medical_attachment = fields.Binary('Medical Certificate', tracking=True, attachment=True)
    hec_approving_letter = fields.Binary('HEC Approving Letter')
    study_offer_letter = fields.Binary('Attach Offer Letter for Study Leave')
    other_purpose_leave = fields.Char('Other Purpose of Leave')

    # new fields dall raha hoon

    project_ids = fields.One2many('cms.hrm.emp.nrp.project', 'leaves_id')
    pi_funding_attachment = fields.Binary('Attach correspondence nominating of New PI from funding agency')
    pi_nomination = fields.Boolean(
        'I have sent nomination for new PI to funding agency and attached the correspondence.')
    travel_grant = fields.Selection(
        [('yes', 'Yes Submitted will all receipts and boarding passed to Research Dte.'), ('no', 'Not applicable')],
        default='yes', string='Travel Grant Reimbursement Claim')
    ip_licensing = fields.Selection(
        [('yes', 'Yes all outstanding queries have been addressed'), ('no', 'Not applicable')], default='yes',
        string='IP & Licensing Procedures')
    certify = fields.Boolean(
        'I certify that I have updated my profile at NUST Research Portal and the above records of publications projects, patents etc. are complete and I have not missed any record with or without NUST.')

    @api.model
    def create(self, values):
        record = super(EmployeeLeavesMain, self).create(values)
        project_id = self.env['odoocms.nrp.project'].sudo().search(
            [('faculty_staff_id', '=', values['faculty_staff_id']), ('state', '=', 'l20')])
        if project_id:
            for projects in project_id:
                data = {
                    'faculty_staff_id': values['faculty_staff_id'],
                    'leaves_id': record.id,
                    'nrp_project_id': projects.id,
                    'title': projects['title'],
                    'submission_date': projects['submission_date'],
                    'completion_date': projects['completion_date'],
                }
                projects = self.env['cms.hrm.emp.nrp.project'].sudo().create(data)
                # return record
        # else:
        #     raise ValidationError(_('no data found'))
        return record

    # sanction_user = fields.Many2one('res.users', string='Sanction User', compute="_compute_sanction_user", store=True)
    configure_id = fields.Many2one('cms.hr.leave.conf', string='Leave Configuration Ref', compute="_computes_configs",
                                   store=True)
    # custom_chain_id = fields.Many2one('cms.hr.leave.user.tree', string='Custom Approval Chain Ref',
    #                                   compute="_compute_config", store=True)


    # Flags
    faculty_job_status = fields.Char('Faculty Job Status', compute='_get_job_status_faculty')
    faculty_emp_type = fields.Char('Employee Type', compute='_get_emp_type_status_faculty')
    faculty_fac_type = fields.Char('Faculty Type', compute='_get_emp_fields')
    show_emp_fields = fields.Boolean('Show employee data', compute='_get_emp_fields')
    show_probation_detailss = fields.Boolean('Show probation data', compute='_get_prob_faculty_data')
    show_service_field = fields.Boolean(string="Show Service Field", compute='_get_service_filed_show')
    tts_effective_date = fields.Boolean('TTS Less Than 3 Years', compute='_get_tts_effective_date')
    ttt_faculty_type = fields.Boolean('TTS Less Than 3 Years field show', compute='_get_tts_effective_date')
    tts_effective_date_attached = fields.Char('TTS Effective Date', compute='_get_tts_effective_date')
    faculty_job_status_resigned = fields.Boolean(string="Show Job Status resigned",
                                                 compute='_get_job_status_faculty_resigned')
    faculty_job_status_retired = fields.Boolean(string="Show Job Status retired",
                                                compute='_get_job_status_faculty_resigned')

    employee_retirement_age = fields.Char('Retirement Date', compute='_get_retirement_age')
    employee_contract_age = fields.Char('Contract Date', compute='_get_contract_age')
    retirement_show = fields.Boolean('Retirement Show', compute='_get_retirement_age')
    contract_show = fields.Boolean('Contract Show', compute='_get_contract_age')
    show_out_location_button = fields.Boolean(string="Show Out Location Field", default='False')
    show_local_location_button = fields.Boolean(string="Show Out Location Field", default='False')
    abroad_section = fields.Boolean(string="Show Abroad Section", default='False')
    proceeding_abroad = fields.Boolean(string="Show Abroad Proceeding", default='False')
    show_study_leave_letter_button = fields.Boolean(string="Show Study Field Letter Field",
                                                    compute='_get_leave_type_study_letter')
    show_hec_field = fields.Boolean(string="Show hecField", compute='_get_leave_country_change_hec')
    medi_attachment_show = fields.Boolean('Medical Attchmanet Show', compute='_medical_attachment_show')
    other_purpose_field = fields.Boolean('Medical Attchmanet Show')
    total_start_date = fields.Date('Total Start Date', compute='_get_start_end_total_dates', store=True)
    total_end_date = fields.Date('Total End Date', compute='_get_start_end_total_dates', store=True)
    total_no_of_days = fields.Float('Total No of Days', compute="_computes_nos_of_leaves", store=True)
    show_recommended_states_button = fields.Boolean('Show Recommended Button', compute = '_compute_shows_security_buttons')
    show_sanction_states_button = fields.Boolean('Show Sanction Button', compute = '_compute_shows_security_buttons')

    @api.model
    def _compute_shows_security_buttons(self):
        for rec in self:
            current_user_login = rec.env.uid
            show_sanction_states_button = False
            show_availed_button = False
            # self.show_availed_button = Falsere
            if current_user_login in rec.sanction_user.user_ids.ids:
                show_sanction_states_button = True




            rec.show_sanction_states_button = show_sanction_states_button
            show_recommended_states_button = False
            if not (current_user_login in rec.sanction_user.user_ids.ids) and rec.curr_user.id == rec.env.uid:
                show_recommended_states_button = True
            # if rec.curr_user.id != rec.env.uid:
            #     show_recommend_button = False

            rec.show_recommended_states_button = show_recommended_states_button
            # show_resend_button = False
            # if rec.faculty_staff_id.id == rec.env.uid:
            #     show_resend_button = True

            # rec.show_resend_button = show_resend_button

            # if self.curr_user == self.env.user:
            #     show_availed_button = True
            # self.show_availed_button = show_availed_button


    # @api.depends('faculty_staff_id', 'leave_ids')
    # def _gets_types_of_facultys(self):
    #     show_faculty_button = False
    #     self.show_faculty_button = False
    #     leave_ids = self.env['combination.leaves.setup.conf'].sudo().search(
    #                         [('leave_id.faculty_staff_id', '=', self.faculty_staff_id.id),
    #                          ('leave_master_id.code', '=', 'EPL')])
    #     if self.faculty_staff_id.employee_category == 'F' and leave_ids:
    #         show_faculty_button = True
    #     self.show_faculty_button = show_faculty_button

    # def get_custom_chain_flow_req(self, child_ids):
    #     current_user = None
    #     previous_user = None
    #     for rec in self.leave_ids:
    #         if rec.leave_type_id.configure_ids.custom_flow:
    #             if rec.leave_type_id.configure_ids.custom_flow_id:
    #                 if rec.leave_type_id.configure_ids.custom_flow_id.child_ids:
    #                     if rec.leave_type_id.configure_ids.custom_flow_id.parent_id:
    #                         return self.get_custom_chain_flow_req()
    #                     if not rec.leave_type_id.configure_ids.custom_flow_id.child_ids:
    #                         current_user = rec.leave_type_id.configure_ids.custom_flow_id.user_id.id
    #                         previous_user = rec.faculty_staff_id.faculty_user.id
    #                         self.curr_user = current_user
    #                         self.prev_user = previous_user

    @api.depends('total_end_date')
    def _get_leave_conversion_state(self):
        self.leave_conversion_states = False
        if self.faculty_staff_id and self.total_end_date:
            current_date = date.today()
            delta = current_date - self.total_end_date
            delta_days = delta.days
            if delta_days > 30:
                self.leave_conversion_states = False
            else:
                self.leave_conversion_states = True



    @api.depends('state')
    def _get_cancel_process(self):
        self.cancel_process_flow = False
        if self.faculty_staff_id and self.leave_ids and self.state:
            if self.state in ['cancel_draft', 'cancel_recommend', 'cancel_inprogress', 'cancel_recommend1', 'cancel_recommend2', 'cancel_recommend3', 'cancel_recommend4', 'cancel_recommend5', 'cancel']:
                self.cancel_process_flow = True
            else:
                self.cancel_process_flow = False

    @api.depends('leave_ids.leave_type_id')
    def _get_related_leave_priority(self):
        self.leave_type_id = None
        if len(self.leave_ids) >= 1:
            if self.faculty_staff_id:
                if self.leave_ids:
                    sorted_leaves = self.leave_ids.sorted(key=lambda r: r.leave_type_id.priority)
                    if sorted_leaves:
                        self.leave_type_id = sorted_leaves[0].leave_type_id.id

    @api.depends('faculty_staff_id')
    def _show_aar_scoring(self):
        for rec in self:
            if rec.faculty_staff_id:
                aar_scoring = self.env['odoocms.hr.emp.aar'].sudo().search(
                    [('faculty_staff_id', '=', rec.faculty_staff_id.id)], limit=1, order='id desc')
                if aar_scoring:
                    rec.aar_id = aar_scoring.hr_emp_aar_score
                    rec.aar_year = aar_scoring.hr_emp_aar_year.year

    @api.depends('faculty_staff_id', 'leave_ids', 'configure_id')
    def _get_custom_sanction_user(self):
        configure_id = None
        if self.faculty_staff_id:
            if self.leave_ids and self.leave_ids.leave_type_id.ids:
                if self.configure_id:
                    configure_id = self.configure_id
                    if configure_id.sanction_authority:
                        self.sanction_user = configure_id.sanction_authority


    @api.depends('faculty_staff_id', 'leave_ids')
    def _getts_typess_of_facultysssss(self):
        show_faculty_buttons = False
        self.show_faculty_buttons = False
        leave_ids = self.env['combination.leaves.setup.conf'].sudo().search(
            [('leave_id.faculty_staff_id', '=', self.faculty_staff_id.id),
             ('leave_master_id.code', '=', 'EPL'), ('leave_id', '=', self.id)])
        if self.faculty_staff_id.employee_category == 'F' and leave_ids:
            show_faculty_buttons = True
        self.show_faculty_buttons = show_faculty_buttons

    @api.depends('faculty_staff_id')
    def _get_support_staff_category(self):
        # self.support_staff_category_id = None
        if self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22']:
            self.support_staff_category_id = 'Officer'
        elif self.faculty_staff_id.ebps.hr_scale_no in ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12',
                                            '13', '14', '15', '16']:
            self.support_staff_category_id = 'NG Staff'
        else:
            self.support_staff_category_id = ''

    @api.depends('faculty_staff_id', 'leave_type_id')
    def _computes_configs(self):
        for rec in self:
            print('Configuration')
            if len(rec.leave_ids) >= 1 and rec.faculty_staff_id and rec.leave_ids and rec.leave_ids.leave_type_id.ids and rec.leave_type_id.id and rec.total_start_date and rec.total_no_of_days and rec.total_end_date:
                print('asd')
                # if self.leave_type_abs.code == 'Abs':
                #     self.configure_id = self.leave_type_abs.configure_ids.display_name
                if len(rec.leave_ids) >= 1 and rec.leave_type_id:

                    leave_config_ids = self.env['cms.hr.leave.type'].sudo().search([
                        ('leave_master_id', '=', rec.leave_type_id.leave_master_id.id),
                        ('active', 'in', [True, False])])
                    if leave_config_ids:

                        # Effective date check
                        if len(leave_config_ids) > 1:
                            leave_config_date_ids = leave_config_ids.filtered(
                                lambda l: l.date_from <= rec.leave_ids.start_date <= l.date_to).sorted(
                                key=lambda r: r.date_from, reverse=True)
                            if leave_config_date_ids:
                                leave_config_ids = leave_config_date_ids[0]
                            else:
                                raise UserError(_("Leave Type not Configured w.r.t Dates"))
                    else:
                        raise UserError(_("Leave Type not Configured"))

                    # hr_emp_type
                    print(rec.faculty_staff_id.hr_emp_type)
                    if leave_config_ids.configure_ids:
                        print('asd')

                        # Employee Type
                        if leave_config_ids.configure_ids.filtered(lambda l: l.employee_type.code == 'A'):
                            leave_config_ids = leave_config_ids.configure_ids.filtered(
                                lambda l: l.employee_type.code == 'A')
                        else:
                            if rec.faculty_staff_id.hr_emp_type:
                                leave_config_ids = leave_config_ids.configure_ids.filtered(
                                    lambda l: l.employee_type.code == rec.faculty_staff_id.hr_emp_type)
                                if leave_config_ids:
                                    leave_config_ids = leave_config_ids
                                else:
                                    raise UserError(_("Leave Type not Configured for this Employee Type"))
                            else:
                                raise UserError(_("Employee type not defined in FMS"))

                        # Employee Category
                        if leave_config_ids.filtered(lambda l: l.employee_category.code == 'A'):
                            leave_config_ids = leave_config_ids.filtered(
                                lambda l: l.employee_category.code == 'A')
                        else:
                            if rec.faculty_staff_id.employee_category:
                                emp_fms_cat = rec.faculty_staff_id.employee_category
                                fms_ebps = rec.faculty_staff_id.ebps

                                emp_cat_code = False
                                if emp_fms_cat == 'S':
                                    if fms_ebps.hr_scale_no in ['17', '18', '19'] and rec.faculty_staff_id.institute.code == 'UMO':
                                        emp_cat_code = 'SSO'
                                    elif fms_ebps.hr_scale_no in ['17', '18', '19'] and rec.faculty_staff_id.institute.code != 'UMO':
                                        emp_cat_code = 'SSO-I'
                                    elif fms_ebps.hr_scale_no and fms_ebps.hr_scale_no not in ['17', '18', '19',
                                                                                               '20', '21', '22'] and rec.faculty_staff_id.institute.code == 'UMO':
                                        emp_cat_code = 'SSNG'
                                    elif fms_ebps.hr_scale_no and fms_ebps.hr_scale_no not in ['17', '18', '19',
                                                                                               '20', '21', '22'] and not rec.faculty_staff_id.institute.code == 'UMO':
                                        emp_cat_code = 'SSNG-I'
                                    elif fms_ebps.hr_scale_no == '20' and rec.faculty_staff_id.institute.code == 'UMO':
                                        emp_cat_code = 'Offr-20'
                                    elif fms_ebps.hr_scale_no == '21':
                                        emp_cat_code = 'Offr-21'
                                if emp_fms_cat == 'F':
                                    emp_cat_code = 'F'
                                if rec.faculty_staff_id.designation.hr_desig_short_desc in ['PRINCIPAL', 'PRIN']:
                                    emp_cat_code = 'Prin'

                                add_duty = self.env['odoocms.hr.emp.add.duty'].sudo().search(
                                    [('faculty_staff_id', '=', rec.faculty_staff_id.id),
                                     ('hr_emp_ad_status', '=', 'A')],
                                    order='hr_emp_ad_start_dt desc', limit=1)
                                if add_duty:
                                    if add_duty.hr_emp_ad_duty:
                                        if add_duty.hr_emp_ad_duty.hr_desig_short_desc:
                                            if add_duty.hr_emp_ad_duty.hr_desig_short_desc in ['PRIN', 'PRINCIPAL']:
                                                emp_cat_code = 'Prin'

                                print('sssssssssssssssss:', emp_cat_code)
                                leave_config_ids = leave_config_ids.filtered(
                                    lambda l: l.employee_category.code == emp_cat_code)
                                if leave_config_ids:
                                    leave_config_ids = leave_config_ids
                                else:
                                    raise UserError(_("Leave Type not Configured for this Employee Category"))
                            else:
                                raise UserError(_("Employee Category not defined in FMS"))

                        # No of leaves
                        # if rec.leave_apply_for == 'LE' and rec.no_of_days < rec.leaves_availed:

                        leave_config_ids = leave_config_ids.filtered(
                            lambda l: l.min_leaves <= rec.total_no_of_days <= l.max_leaves)
                        if leave_config_ids:
                            if len(leave_config_ids) > 1:
                                raise UserError(_("More than one leave configured for provided data"))
                            else:
                                # Assign leave config to emp leave record
                                rec.configure_id = leave_config_ids.id
                                if leave_config_ids.custom_flow and leave_config_ids.custom_flow_id:
                                    # Assign custom flow to emp leave record
                                    rec.custom_chain_id = leave_config_ids.custom_flow_id.id
                        else:
                            raise UserError(_("Leave not configured w.r.t. min and max no of leaves"))
                    else:
                        raise UserError(_("Leave Type not Configured"))

                        # print('leave_config_ids', leave_config_ids)









    @api.depends('faculty_staff_id', 'state', 'sanction_user', 'leave_ids','custom_chain_id', 'configure_id','leave_type_id')
    def send_leave_record(self):
        if self.faculty_staff_id:
            if self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and self.faculty_staff_id.ebps and self.faculty_staff_id.ebps.hr_scale_no and self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22'] and self.leave_type_id.code in ['EL', 'SHL', 'CL', 'SL', 'EOL', 'EPL', 'SabL', 'MTL', 'PTL', 'SpEdtL', 'LND']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.curr_user = current_user
                sanction_user = None
                if self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.hod_user and not [self.faculty_staff_id.hod_user.id] == self.sanction_user.user_ids.ids:
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.principal_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'recommend1'

                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.faculty_staff_id.principal_user and  (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.leave_ids.no_of_days and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                                                                 self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.dir_hr_user.id
                                        previous_user = self.curr_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                                    elif self.faculty_staff_id.prorec_user and (
                                    self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.dir_hr_user.id
                                        previous_user = self.curr_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'sanction'

                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.prorec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.faculty_staff_id.prorec_user and (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.prorec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.prorec_user.id and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.prorec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.prorec_user.id and self.faculty_staff_id.prorec_user and (self.curr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.prorec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.prorec_user.id and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and not (self.faculty_staff_id.prorec_user) and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.rec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            if self.faculty_staff_id.rec_user and  (
                                self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.rec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.rec_user.id and self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.rec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.rec_user.id and self.faculty_staff_id.rec_user and  (self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.rec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.rec_user.id and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'




                # elif self.faculty_staff_id and not (self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))
            elif self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and self.faculty_staff_id.ebps and self.faculty_staff_id.ebps.hr_scale_no and self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22'] and self.leave_type_id.code in ['ML']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.curr_user = current_user
                sanction_user = None
                if self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not [self.faculty_staff_id.medical_officer.id] == self.sanction_user.user_ids.ids:
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.hod_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'recommend1'

                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.hod_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.hod_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.hod_user.id and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user.id
                                current_user = self.faculty_staff_id.principal_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.hod_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.faculty_staff_id.principal_user and  (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.principal_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.leave_ids.no_of_days and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                                                                 self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.dir_hr_user.id
                                        previous_user = self.curr_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                                    elif self.faculty_staff_id.prorec_user and (
                                    self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.dir_hr_user.id
                                        previous_user = self.curr_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'sanction'

                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.faculty_staff_id.medical_officer and (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (self.curr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (self.curr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and not (self.faculty_staff_id.prorec_user) and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            if self.faculty_staff_id.rec_user and  (
                                self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and  (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'




                # elif self.faculty_staff_id and not (self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))
            elif self.leave_type_id and self.leave_type_id.code in ['DisL']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.curr_user = current_user
                sanction_user = None
                if self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not [self.faculty_staff_id.medical_officer.id] == self.sanction_user.user_ids.ids:
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.hod_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'recommend1'

                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.hod_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.hod_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.hod_user.id and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user.id
                                current_user = self.faculty_staff_id.principal_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.hod_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.director_hr and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.director_hr.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.director_hr and self.faculty_staff_id.director_hr  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.director_hr.id and loged_in_user == self.faculty_staff_id.director_hr.id:
                                previous_user = self.faculty_staff_id.director_hr.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.director_hr and self.faculty_staff_id.director_hr  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.director_hr.id:
                                previous_user = self.faculty_staff_id.director_hr
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend6'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.faculty_staff_id.principal_user and  (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.principal_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.director_hr.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.director_hr and self.faculty_staff_id.director_hr and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.director_hr.id and loged_in_user == self.faculty_staff_id.director_hr.id:
                                previous_user = self.faculty_staff_id.director_hr.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.director_hr and self.faculty_staff_id.director_hr and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.director_hr.id:
                                previous_user = self.faculty_staff_id.director_hr
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.leave_ids.no_of_days and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                                                                 self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.dir_hr_user.id
                                        previous_user = self.curr_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                                    elif self.faculty_staff_id.prorec_user and (
                                    self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.dir_hr_user.id
                                        previous_user = self.curr_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'sanction'

                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.faculty_staff_id.medical_officer and (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (self.curr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (self.curr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.director_hr.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.director_hr and self.faculty_staff_id.director_hr and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.director_hr.id and loged_in_user == self.faculty_staff_id.director_hr.id:
                                previous_user = self.faculty_staff_id.director_hr.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.director_hr and self.faculty_staff_id.director_hr and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.director_hr.id:
                                previous_user = self.faculty_staff_id.director_hr
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and not (self.faculty_staff_id.prorec_user) and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            if self.faculty_staff_id.rec_user and  (
                                self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and  (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'




                # elif self.faculty_staff_id and not (self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))
            elif not self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and not self.faculty_staff_id.ebps and not self.faculty_staff_id.ebps.hr_scale_no and not self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22'] and self.leave_type_id.code in ['EL', 'SHL', 'CL', 'SL', 'EOL', 'EPL', 'SabL', 'MTL', 'PTL', 'SpEdtL', 'LND']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.curr_user = current_user
                sanction_user = None
                if self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.hod_user and not [self.faculty_staff_id.hod_user.id] == self.sanction_user.user_ids.ids:
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.principal_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'recommend1'

                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                        elif self.state == 'recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.dir_hr_user.id and self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids  and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.prorec_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.prorec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'



                # elif self.faculty_staff_id and not (self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))
            elif not self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and not self.faculty_staff_id.ebps and not self.faculty_staff_id.ebps.hr_scale_no and not self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22'] and self.leave_type_id.code in ['ML']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.curr_user = current_user
                sanction_user = None
                if self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not [
                                                                                 self.faculty_staff_id.medical_officer.id] == self.sanction_user.user_ids.ids:
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.principal_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.hod_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'recommend1'

                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.hod_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.hod_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.hod_user.id and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user.id
                                current_user = self.faculty_staff_id.principal_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.hod_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.dir_hr_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend6'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and self.faculty_staff_id.medical_officer and not (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.faculty_staff_id.principal_user and (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.principal_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.dir_hr_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.dir_hr_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.dir_hr_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.leave_ids.no_of_days and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (
                                                                                    self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (
                                                                                    self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                            self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                              self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                              self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                                                                         self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.dir_hr_user.id
                                        previous_user = self.curr_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                                    elif self.faculty_staff_id.prorec_user and (
                                            self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.dir_hr_user.id
                                        previous_user = self.curr_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'sanction'

                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.faculty_staff_id.medical_officer and (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (
                                    self.curr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.dir_hr_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.dir_hr_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and not (self.faculty_staff_id.prorec_user) and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            if self.faculty_staff_id.rec_user and (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'




                elif self.faculty_staff_id and not (
                        self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                    raise UserError(_('Leave Hierarchy Not Defined...!!!'))
            elif not self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and self.faculty_staff_id.ebps and self.faculty_staff_id.ebps.hr_scale_no and self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22'] and self.leave_type_id.code in ['EL', 'SHL', 'CL', 'SL', 'EOL', 'EPL', 'SabL', 'MTL', 'PTL', 'SpEdtL', 'LND']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.curr_user = current_user
                sanction_user = None
                if self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.hod_user and not [self.faculty_staff_id.hod_user.id] == self.sanction_user.user_ids.ids:
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.principal_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'recommend1'

                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            if self.faculty_staff_id.principal_user and  (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                            elif not self.curr_user.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                        elif self.state == 'recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            if self.faculty_staff_id.prorec_user and (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.dir_hr_user.id and self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                            elif not self.curr_user.id == self.faculty_staff_id.dir_hr_user.id and self.faculty_staff_id.prorec_user and (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids  and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.prorec_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.prorec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'



                # elif self.faculty_staff_id and not (self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))
            elif not self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and self.faculty_staff_id.ebps and self.faculty_staff_id.ebps.hr_scale_no and self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22'] and self.leave_type_id.code in ['ML']:
                    loged_in_user = self.env.uid
                    previous_user = None
                    # current_user = self.faculty_staff_id.faculty_user.id
                    # self.curr_user = current_user
                    sanction_user = None
                    if self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                        if not self.custom_chain_id:

                            if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                                if self.faculty_staff_id.medical_officer and not [
                                                                                     self.faculty_staff_id.medical_officer.id] == self.sanction_user.user_ids.ids:
                                    current_user = self.faculty_staff_id.medical_officer.id
                                    previous_user = self.faculty_staff_id.faculty_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend'

                                    # previous_user = previous_user
                            elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                                if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (
                                        self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                    current_user = self.faculty_staff_id.medical_officer.id
                                    previous_user = self.faculty_staff_id.faculty_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend'
                                elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.principal_user and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                    previous_user = self.faculty_staff_id.medical_officer
                                    current_user = self.faculty_staff_id.hod_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'recommend1'

                                elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.hod_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                    previous_user = self.faculty_staff_id.hod_user
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'

                            elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                                if self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.hod_user and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.hod_user.id and loged_in_user == self.faculty_staff_id.hod_user.id:
                                    previous_user = self.faculty_staff_id.hod_user.id
                                    current_user = self.faculty_staff_id.principal_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend2'
                                elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.hod_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                    previous_user = self.faculty_staff_id.medical_officer
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'


                            elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                                if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                    previous_user = self.faculty_staff_id.principal_user.id
                                    current_user = self.faculty_staff_id.dir_hr_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend3'
                                elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                    previous_user = self.faculty_staff_id.principal_user
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'
                            elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                                if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.dir_hr_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                    previous_user = self.faculty_staff_id.dir_hr_user.id
                                    current_user = self.faculty_staff_id.prorec_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend4'
                                elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                    previous_user = self.faculty_staff_id.dir_hr_user
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'

                            elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                                # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                                if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                    previous_user = self.faculty_staff_id.prorec_user.id
                                    current_user = self.faculty_staff_id.rec_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend5'
                                elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                    previous_user = self.faculty_staff_id.prorec_user
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'
                            elif self.state == 'recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                                # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                                if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                    previous_user = self.faculty_staff_id.prorec_user.id
                                    current_user = self.faculty_staff_id.rec_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend6'
                                elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                    previous_user = self.faculty_staff_id.rec_user
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'


                    elif self.faculty_staff_id  and not (
                    self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                        if not self.custom_chain_id:
                            if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                                if self.faculty_staff_id.principal_user and self.faculty_staff_id.medical_officer and not (
                                        self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                    current_user = self.faculty_staff_id.medical_officer.id
                                    previous_user = self.faculty_staff_id.faculty_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend'
                                elif self.faculty_staff_id.principal_user and (
                                        self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                    current_user = self.faculty_staff_id.medical_officer.id
                                    previous_user = self.faculty_staff_id.faculty_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend'

                                    # previous_user = previous_user
                            elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                                if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (
                                        self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                    current_user = self.faculty_staff_id.medical_officer.id
                                    previous_user = self.faculty_staff_id.faculty_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend'
                                elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (
                                        self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                    current_user = self.faculty_staff_id.medical_officer.id
                                    previous_user = self.faculty_staff_id.faculty_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend'
                                elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                    previous_user = self.faculty_staff_id.medical_officer.id
                                    current_user = self.faculty_staff_id.principal_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend1'

                                elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                    previous_user = self.faculty_staff_id.medical_officer
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'

                            elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                                if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.dir_hr_user and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                    previous_user = self.faculty_staff_id.principal_user.id
                                    current_user = self.faculty_staff_id.dir_hr_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend2'
                                elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                    previous_user = self.faculty_staff_id.principal_user
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'

                            elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                                if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.dir_hr_user and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.dir_hr_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                    previous_user = self.faculty_staff_id.dir_hr_user.id
                                    current_user = self.faculty_staff_id.prorec_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend3'
                                elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                    previous_user = self.faculty_staff_id.principal_user
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'


                            elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                                if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                    previous_user = self.faculty_staff_id.prorec_user.id
                                    current_user = self.faculty_staff_id.rec_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend4'
                                elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                    previous_user = self.faculty_staff_id.prorec_user
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'
                            elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                                if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                    previous_user = self.faculty_staff_id.rec_user.id
                                    current_user = self.faculty_staff_id.rec_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend5'
                                elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                    previous_user = self.faculty_staff_id.rec_user
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'
                        else:
                            if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.leave_ids.no_of_days and self.custom_chain_id:
                                self.curr_user = self.faculty_staff_id.faculty_user.id
                                user_exists = False
                                parent_user = False
                                if self.curr_user and self.custom_chain_id:
                                    user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                         self.custom_chain_id)
                                    print('fffffffffffffffffffffffff', user_exists, parent_user)
                                    if user_exists:
                                        if parent_user:
                                            curr_user = parent_user.id
                                            prev_user = self.curr_user.id
                                            self.curr_user = curr_user
                                            self.prev_user = prev_user
                                            self.state = 'inprogress'
                                    if not user_exists:
                                        if self.faculty_staff_id.principal_user and not (
                                                                                                self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                            current_user = self.faculty_staff_id.principal_user.id
                                            previous_user = self.faculty_staff_id.faculty_user.id
                                            self.curr_user = current_user
                                            self.prev_user = previous_user
                                            self.state = 'recommend'

                            elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                                self.curr_user = self.faculty_staff_id.faculty_user.id
                                user_exists = False
                                parent_user = False
                                if self.curr_user and self.custom_chain_id:
                                    user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                         self.custom_chain_id)
                                    print('fffffffffffffffffffffffff', user_exists, parent_user)
                                    if user_exists:
                                        if parent_user:
                                            curr_user = parent_user.id
                                            prev_user = self.curr_user.id
                                            self.curr_user = curr_user
                                            self.prev_user = prev_user
                                            self.state = 'inprogress'
                                    if not user_exists:
                                        if self.faculty_staff_id.principal_user and not (
                                                                                                self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                            current_user = self.faculty_staff_id.principal_user.id
                                            previous_user = self.faculty_staff_id.faculty_user.id
                                            self.curr_user = current_user
                                            self.prev_user = previous_user
                                            self.state = 'inprogress'
                            elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                                self.curr_user = self.faculty_staff_id.principal_user.id
                                user_exists = False
                                parent_user = False
                                if self.curr_user and self.custom_chain_id:
                                    user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                         self.custom_chain_id)
                                    print('fffffffffffffffffffffffff', user_exists, parent_user)
                                    if user_exists and loged_in_user == self.curr_user.id:
                                        if parent_user:
                                            curr_user = parent_user.id
                                            prev_user = self.curr_user.id
                                            self.curr_user = curr_user
                                            self.prev_user = prev_user
                                            self.state = 'recommend1'
                                        elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                            curr_user = self.faculty_staff_id.dir_hr_user.id
                                            prev_user = self.curr_user.id
                                            self.curr_user = curr_user
                                            self.prev_user = prev_user
                                            self.state = 'sanction'
                                    if not user_exists:
                                        if self.faculty_staff_id.prorec_user and not (
                                                self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                            current_user = self.faculty_staff_id.prorec_user.id
                                            previous_user = self.faculty_staff_id.principal_user.id
                                            self.curr_user = current_user
                                            self.prev_user = previous_user
                                            self.state = 'recommend1'

                            elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                                self.curr_user = self.curr_user.id
                                user_exists = False
                                parent_user = False
                                if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                    user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                         self.custom_chain_id)
                                    print('fffffffffffffffffffffffff', user_exists, parent_user)
                                    if user_exists:
                                        if parent_user:
                                            curr_user = parent_user.id
                                            prev_user = self.curr_user.id
                                            self.curr_user = curr_user
                                            self.prev_user = prev_user
                                            self.state = 'recommend2'
                                        elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                            curr_user = self.faculty_staff_id.dir_hr_user.id
                                            prev_user = self.curr_user.id
                                            self.curr_user = curr_user
                                            self.prev_user = prev_user
                                            self.state = 'sanction'
                                    if not user_exists:
                                        if self.faculty_staff_id.rec_user and not (
                                                                                          self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                            current_user = self.faculty_staff_id.rec_user.id
                                            previous_user = self.faculty_staff_id.rec_user.id
                                            self.curr_user = current_user
                                            self.prev_user = previous_user
                                            self.state = 'recommend2'

                            elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                                self.curr_user = self.curr_user.id
                                user_exists = False
                                parent_user = False
                                if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                    user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                         self.custom_chain_id)
                                    print('fffffffffffffffffffffffff', user_exists, parent_user)
                                    if user_exists:
                                        if parent_user:
                                            curr_user = parent_user.id
                                            prev_user = self.curr_user.id
                                            self.curr_user = curr_user
                                            self.prev_user = prev_user
                                            self.state = 'recommend3'
                                        elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                            curr_user = self.faculty_staff_id.dir_hr_user.id
                                            prev_user = self.curr_user.id
                                            self.curr_user = curr_user
                                            self.prev_user = prev_user
                                            self.state = 'sanction'
                                    if not user_exists:
                                        if self.faculty_staff_id.rec_user and not (
                                                                                          self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                            current_user = self.faculty_staff_id.prorec_user.id
                                            previous_user = self.faculty_staff_id.principal_user.id
                                            self.curr_user = current_user
                                            self.prev_user = previous_user
                                            self.state = 'recommend3'

                            elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                                self.curr_user = self.curr_user.id
                                user_exists = False
                                parent_user = False
                                if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                    user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                         self.custom_chain_id)
                                    print('fffffffffffffffffffffffff', user_exists, parent_user)
                                    if user_exists:
                                        if parent_user:
                                            curr_user = parent_user.id
                                            prev_user = self.curr_user.id
                                            self.curr_user = curr_user
                                            self.prev_user = prev_user
                                            self.state = 'recommend4'
                                        elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                            curr_user = self.faculty_staff_id.dir_hr_user.id
                                            prev_user = self.curr_user.id
                                            self.curr_user = curr_user
                                            self.prev_user = prev_user
                                            self.state = 'sanction'
                                    if not user_exists:
                                        if self.faculty_staff_id.prorec_user and not (
                                                                                             self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                            current_user = self.faculty_staff_id.dir_hr_user.id
                                            previous_user = self.curr_user.id
                                            self.curr_user = current_user
                                            self.prev_user = previous_user
                                            self.state = 'recommend4'
                                        elif self.faculty_staff_id.prorec_user and (
                                                self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                            current_user = self.faculty_staff_id.dir_hr_user.id
                                            previous_user = self.curr_user.id
                                            self.curr_user = current_user
                                            self.prev_user = previous_user
                                            self.state = 'sanction'

                    elif self.faculty_staff_id  and not (
                    self.faculty_staff_id.hod_user) and not (
                    self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                        if not self.custom_chain_id:
                            if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                                if self.faculty_staff_id.medical_officer and not (
                                        self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                    current_user = self.faculty_staff_id.medical_officer.id
                                    previous_user = self.faculty_staff_id.faculty_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend'
                                elif self.faculty_staff_id.medical_officer and (
                                        self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                    current_user = self.faculty_staff_id.medical_officer.id
                                    previous_user = self.faculty_staff_id.faculty_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend'

                                    # previous_user = previous_user
                            elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                                if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids):
                                    current_user = self.faculty_staff_id.medical_officer.id
                                    previous_user = self.faculty_staff_id.faculty_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend'
                                elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (
                                        self.curr_user.id in self.sanction_user.user_ids.ids):
                                    current_user = self.faculty_staff_id.medical_officer.id
                                    previous_user = self.faculty_staff_id.faculty_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend'
                                elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                    previous_user = self.faculty_staff_id.medical_officer.id
                                    current_user = self.faculty_staff_id.dir_hr_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend1'

                                elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                    previous_user = self.faculty_staff_id.medical_officer
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'

                            elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                                if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.dir_hr_user and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                    previous_user = self.faculty_staff_id.dir_hr_user.id
                                    current_user = self.faculty_staff_id.prorec_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend2'
                                elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.dir_hr_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                    previous_user = self.faculty_staff_id.dir_hr_user
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'


                            elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                                if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                    previous_user = self.faculty_staff_id.prorec_user.id
                                    current_user = self.faculty_staff_id.rec_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend3'
                                elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                    previous_user = self.faculty_staff_id.rec_user
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'

                            elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                                if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                    previous_user = self.faculty_staff_id.rec_user.id
                                    current_user = self.faculty_staff_id.rec_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend3'
                                elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                    previous_user = self.faculty_staff_id.rec_user
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'

                    elif self.faculty_staff_id  and not (
                    self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and not (
                    self.faculty_staff_id.prorec_user) and self.faculty_staff_id.rec_user:
                        if not self.custom_chain_id:
                            if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                                if self.faculty_staff_id.medical_officer and not (
                                        self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                    current_user = self.faculty_staff_id.medical_officer.id
                                    previous_user = self.faculty_staff_id.faculty_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend'
                                if self.faculty_staff_id.rec_user and (
                                        self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                    current_user = self.faculty_staff_id.medical_officer.id
                                    previous_user = self.faculty_staff_id.faculty_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend'

                                    # previous_user = previous_user
                            elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                                if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (
                                        self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                    current_user = self.faculty_staff_id.medical_officer.id
                                    previous_user = self.faculty_staff_id.faculty_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend'
                                elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (
                                        self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                    current_user = self.faculty_staff_id.medical_officer.id
                                    previous_user = self.faculty_staff_id.faculty_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend'
                                elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                    previous_user = self.faculty_staff_id.medical_officer.id
                                    current_user = self.faculty_staff_id.rec_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend1'

                                elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                    previous_user = self.faculty_staff_id.medical_officer
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'


                            elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                                if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                        self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                    previous_user = self.faculty_staff_id.rec_user.id
                                    current_user = self.faculty_staff_id.rec_user.id
                                    self.curr_user = current_user
                                    self.prev_user = previous_user
                                    self.state = 'recommend2'
                                elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                    previous_user = self.faculty_staff_id.rec_user
                                    current_user = self.faculty_staff_id.dir_hr_user
                                    self.curr_user = current_user.id
                                    self.prev_user = previous_user.id
                                    self.state = 'sanction'




                    elif self.faculty_staff_id and not (
                            self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                        raise UserError(_('Leave Hierarchy Not Defined...!!!'))

            elif not self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and self.faculty_staff_id.ebps and self.faculty_staff_id.ebps.hr_scale_no and not self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22'] and self.leave_type_id.code in ['EL', 'SHL', 'CL', 'SL', 'EOL', 'EPL', 'SabL', 'MTL', 'PTL', 'SpEdtL', 'LND']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.curr_user = current_user
                sanction_user = None
                if self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            if self.faculty_staff_id.hod_user and  (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and  (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.principal_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'recommend1'

                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and  self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                        elif self.state == 'recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.dir_hr_user.id and self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids  and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.prorec_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.prorec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'



                # elif self.faculty_staff_id and not (self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))
            elif not self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and self.faculty_staff_id.ebps and self.faculty_staff_id.ebps.hr_scale_no and not self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22'] and self.leave_type_id.code in ['ML']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.curr_user = current_user
                sanction_user = None
                if self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not [
                                                                                 self.faculty_staff_id.medical_officer.id] == self.sanction_user.user_ids.ids:
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.principal_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.hod_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'recommend1'

                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.hod_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.hod_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.hod_user.id and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user.id
                                current_user = self.faculty_staff_id.principal_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.hod_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.dir_hr_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend6'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and self.faculty_staff_id.medical_officer and not (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.faculty_staff_id.principal_user and (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.principal_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.dir_hr_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.dir_hr_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.dir_hr_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.leave_ids.no_of_days and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (
                                                                                    self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (
                                                                                    self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                            self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                              self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                              self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                                                                         self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.dir_hr_user.id
                                        previous_user = self.curr_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                                    elif self.faculty_staff_id.prorec_user and (
                                            self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.dir_hr_user.id
                                        previous_user = self.curr_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'sanction'

                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.faculty_staff_id.medical_officer and (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (
                                    self.curr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.dir_hr_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.dir_hr_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and not (self.faculty_staff_id.prorec_user) and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            if self.faculty_staff_id.rec_user and (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (
                                    self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'




                elif self.faculty_staff_id and not (
                        self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                    raise UserError(_('Leave Hierarchy Not Defined...!!!'))

            elif self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and self.faculty_staff_id.ebps and self.faculty_staff_id.ebps.hr_scale_no and not self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22'] and self.leave_type_id.code in ['EL', 'SHL', 'CL', 'SL', 'EOL', 'EPL', 'SabL', 'MTL', 'PTL', 'SpEdtL', 'LND']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.curr_user = current_user
                sanction_user = None
                if self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            if self.faculty_staff_id.hod_user and (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and  (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.principal_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'recommend1'

                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and  self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                        elif self.state == 'recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.dir_hr_user.id and self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids  and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.prorec_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.prorec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'



                # elif self.faculty_staff_id and not (self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))
            elif self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and self.faculty_staff_id.ebps and self.faculty_staff_id.ebps.hr_scale_no and not self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22'] and self.leave_type_id.code in ['ML']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.curr_user = current_user
                sanction_user = None
                if self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not [self.faculty_staff_id.medical_officer.id] == self.sanction_user.user_ids.ids:
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.hod_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'recommend1'

                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.hod_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.hod_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.hod_user.id and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user.id
                                current_user = self.faculty_staff_id.principal_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.hod_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.faculty_staff_id.principal_user and  (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.principal_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.leave_ids.no_of_days and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                                                                 self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.dir_hr_user.id
                                        previous_user = self.curr_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                                    elif self.faculty_staff_id.prorec_user and (
                                    self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.dir_hr_user.id
                                        previous_user = self.curr_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'sanction'

                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.faculty_staff_id.medical_officer and (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (self.curr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (self.curr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and not (self.faculty_staff_id.prorec_user) and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            if self.faculty_staff_id.rec_user and  (
                                self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and  (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'




                # elif self.faculty_staff_id and not (self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))
            elif self.leave_type_id and self.leave_type_id.code in ['LPR']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.curr_user = current_user
                sanction_user = None
                if self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.hod_user and not [self.faculty_staff_id.hod_user.id] == self.sanction_user.user_ids.ids:
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.principal_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'recommend1'

                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.hod_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'




                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.director_hr and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.director_hr.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.director_hr and self.faculty_staff_id.director_hr  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.director_hr.id and loged_in_user == self.faculty_staff_id.director_hr.id:
                                previous_user = self.faculty_staff_id.director_hr.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.director_hr and self.faculty_staff_id.director_hr  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.director_hr.id:
                                previous_user = self.faculty_staff_id.director_hr
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.faculty_staff_id.principal_user and  (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.principal_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.director_hr.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.director_hr and self.faculty_staff_id.director_hr and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.director_hr.id and loged_in_user == self.faculty_staff_id.director_hr.id:
                                previous_user = self.faculty_staff_id.director_hr.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.director_hr and self.faculty_staff_id.director_hr and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.director_hr.id:
                                previous_user = self.faculty_staff_id.director_hr
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.leave_ids.no_of_days and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                                                                 self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.dir_hr_user.id
                                        previous_user = self.curr_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                                    elif self.faculty_staff_id.prorec_user and (
                                    self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.dir_hr_user.id
                                        previous_user = self.curr_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'sanction'

                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.faculty_staff_id.medical_officer and (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (self.curr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and (self.curr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.director_hr.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.director_hr and self.faculty_staff_id.director_hr and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.director_hr.id and loged_in_user == self.faculty_staff_id.director_hr.id:
                                previous_user = self.faculty_staff_id.director_hr.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.director_hr and self.faculty_staff_id.director_hr and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.director_hr.id:
                                previous_user = self.faculty_staff_id.director_hr
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                elif self.faculty_staff_id  and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and not (self.faculty_staff_id.prorec_user) and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            if self.faculty_staff_id.rec_user and  (
                                self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and not (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and  (self.faculty_staff_id.medical_officer.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.medical_officer.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.medical_officer and self.faculty_staff_id.medical_officer and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.medical_officer.id and self.faculty_staff_id.medical_officer and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.medical_officer.id:
                                previous_user = self.faculty_staff_id.medical_officer
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'




                # elif self.faculty_staff_id and not (self.faculty_staff_id  and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))

    @api.depends('faculty_staff_id', 'state', 'sanction_user', 'leave_ids', 'custom_chain_id', 'configure_id', 'leave_type_id')
    def cancel_leave_record(self):
        if self.faculty_staff_id:
            if self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and self.faculty_staff_id.ebps and self.faculty_staff_id.ebps.hr_scale_no and self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.currents_users = current_user
                sanction_user = None
                if self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.hod_user and not [
                                                                             self.faculty_staff_id.hod_user.id] == self.sanction_user.user_ids.ids:
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                                # previous_user = previous_user
                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.currents_users.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and not (
                                    self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.currents_users == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.principal_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel_recommend1'

                            elif self.currents_users == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'

                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend3'
                            elif self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend3'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (
                        self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and not (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.faculty_staff_id.principal_user and (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                                # previous_user = previous_user
                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.currents_users.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and not (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif not self.currents_users.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.currents_users == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend1'

                            elif self.currents_users.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                    else:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.leave_ids.no_of_days and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (
                                                                                               self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend'

                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (
                                                                                               self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_inprogress'
                        elif self.state == 'cancel_inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.currents_users.id:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend1'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                            self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend1'

                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend2'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                         self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend2'

                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend3'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend3'

                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend4'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend4'

                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (
                        self.faculty_staff_id.hod_user) and not (
                        self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.prorec_user and not (
                                    self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.prorec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.faculty_staff_id.prorec_user and (
                                    self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.prorec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                                # previous_user = previous_user
                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.currents_users.id == self.faculty_staff_id.prorec_user.id and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.prorec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif not self.currents_users.id == self.faculty_staff_id.prorec_user.id and self.faculty_staff_id.prorec_user and (
                                    self.currents_users.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.prorec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend1'

                            elif self.currents_users.id == self.faculty_staff_id.prorec_user.id and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'

                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (
                        self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and not (
                        self.faculty_staff_id.prorec_user) and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.rec_user and not (
                                    self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.rec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            if self.faculty_staff_id.rec_user and (
                                    self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.rec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                                # previous_user = previous_user
                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.currents_users.id == self.faculty_staff_id.rec_user.id and self.faculty_staff_id.rec_user and not (
                                    self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.rec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif not self.currents_users.id == self.faculty_staff_id.rec_user.id and self.faculty_staff_id.rec_user and (
                                    self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.rec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend1'

                            elif self.currents_users.id == self.faculty_staff_id.rec_user.id and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'




                # elif self.faculty_staff_id and not (
                #         self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))

            elif not self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and not self.faculty_staff_id.ebps and not self.faculty_staff_id.ebps.hr_scale_no and not self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.currents_users = current_user
                sanction_user = None
                if self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.hod_user and not [
                                                                             self.faculty_staff_id.hod_user.id] == self.sanction_user.user_ids.ids:
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                                # previous_user = previous_user
                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.currents_users.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and not (
                                    self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.currents_users == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.principal_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel_recommend1'

                            elif self.currents_users == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'

                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend3'
                            elif self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'

                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend4'
                            elif self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                        elif self.state == 'cancel_recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend5'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (
                        self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and not (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                                # previous_user = previous_user
                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.currents_users.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and not (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.currents_users == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend1'

                            elif self.currents_users.id == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'

                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend3'
                            elif self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend4'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                    else:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.leave_ids.no_of_days and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (
                                                                                               self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend'

                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (
                                                                                               self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_inprogress'
                        elif self.state == 'cancel_inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.currents_users.id:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend1'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                            self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend1'

                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend2'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                         self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend2'

                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend3'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend3'

                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend4'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend4'
                        elif self.state == 'cancel_recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend5'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend5'
                        elif self.state == 'cancel_recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend5'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend5'
                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (
                        self.faculty_staff_id.hod_user) and not (
                        self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.prorec_user and not (
                                    self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                                # previous_user = previous_user
                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.currents_users.id == self.faculty_staff_id.dir_hr_user.id and self.faculty_staff_id.prorec_user and not (
                                    self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend1'

                            elif self.currents_users.id == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                    else:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                                                                            self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend'

                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                                                                            self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_inprogress'
                        elif self.state == 'cancel_inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.prorec_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.currents_users.id:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend1'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                            self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.prorec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend1'

                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend2'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                         self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend2'

                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend3'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend3'

                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend4'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                            self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids):
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend4'



                # elif self.faculty_staff_id and not (
                #         self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))
            elif not self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and self.faculty_staff_id.ebps and self.faculty_staff_id.ebps.hr_scale_no and self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.currents_users = current_user
                sanction_user = None
                if self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.hod_user and not [
                                                                             self.faculty_staff_id.hod_user.id] == self.sanction_user.user_ids.ids:
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                                # previous_user = previous_user
                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.currents_users.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and not (
                                    self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.currents_users == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.principal_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel_recommend1'

                            elif self.currents_users == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'

                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend3'
                            elif self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'

                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend4'
                            elif self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                        elif self.state == 'cancel_recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend5'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (
                        self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and not (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            if self.faculty_staff_id.principal_user and (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                                # previous_user = previous_user
                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.currents_users.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and not (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                            elif not self.currents_users.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.currents_users == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend1'

                            elif self.currents_users.id == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'

                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend3'
                            elif self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend4'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                    else:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.leave_ids.no_of_days and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (
                                                                                               self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend'

                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (
                                                                                               self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_inprogress'
                        elif self.state == 'cancel_inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.currents_users.id:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend1'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                            self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend1'

                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend2'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                         self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend2'

                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend3'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend3'

                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend4'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend4'
                        elif self.state == 'cancel_recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend5'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend5'
                        elif self.state == 'cancel_recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend5'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend5'
                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (
                        self.faculty_staff_id.hod_user) and not (
                        self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.prorec_user and not (
                                    self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            if self.faculty_staff_id.prorec_user and (
                                    self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                                # previous_user = previous_user
                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.currents_users.id == self.faculty_staff_id.dir_hr_user.id and self.faculty_staff_id.prorec_user and not (
                                    self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                            elif not self.currents_users.id == self.faculty_staff_id.dir_hr_user.id and self.faculty_staff_id.prorec_user and (
                                    self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend1'

                            elif self.currents_users.id == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                    else:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                                                                            self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend'

                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                                                                            self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_inprogress'
                        elif self.state == 'cancel_inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.prorec_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.currents_users.id:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend1'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                            self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.prorec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend1'

                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend2'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                         self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend2'

                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend3'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend3'

                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend4'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                            self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids):
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend4'



                # elif self.faculty_staff_id and not (
                #         self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))
            elif not self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and self.faculty_staff_id.ebps and self.faculty_staff_id.ebps.hr_scale_no and not self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.currents_users = current_user
                sanction_user = None
                if self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.hod_user and not (
                                    self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            if self.faculty_staff_id.hod_user and (
                                    self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                                # previous_user = previous_user
                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.currents_users.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and not (
                                    self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif not self.currents_users.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and (
                                    self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.currents_users == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.principal_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel_recommend1'

                            elif self.currents_users == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'

                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend3'
                            elif self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'

                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend4'
                            elif self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                        elif self.state == 'cancel_recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend5'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (
                        self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and not (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                                # previous_user = previous_user
                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.currents_users.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and not (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.currents_users == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend1'

                            elif self.currents_users.id == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'

                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend3'
                            elif self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend4'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                    else:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.leave_ids.no_of_days and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (
                                                                                               self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend'

                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (
                                                                                               self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_inprogress'
                        elif self.state == 'cancel_inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.currents_users.id:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend1'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                            self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend1'

                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend2'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                         self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend2'

                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend3'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend3'

                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend4'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend4'
                        elif self.state == 'cancel_recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend5'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend5'
                        elif self.state == 'cancel_recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend5'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend5'
                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (
                        self.faculty_staff_id.hod_user) and not (
                        self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.prorec_user and not (
                                    self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                                # previous_user = previous_user
                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.currents_users.id == self.faculty_staff_id.dir_hr_user.id and self.faculty_staff_id.prorec_user and not (
                                    self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend1'

                            elif self.currents_users.id == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                    else:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                                                                            self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend'

                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                                                                            self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_inprogress'
                        elif self.state == 'cancel_inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.prorec_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.currents_users.id:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend1'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                            self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.prorec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend1'

                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend2'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                         self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend2'

                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend3'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend3'

                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend4'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                            self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids):
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend4'



                # elif self.faculty_staff_id and not (
                #         self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))
            elif self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and self.faculty_staff_id.ebps and self.faculty_staff_id.ebps.hr_scale_no and not self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.currents_users = current_user
                sanction_user = None
                if self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.hod_user and not (
                                    self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            if self.faculty_staff_id.hod_user and (
                                    self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                                # previous_user = previous_user
                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.currents_users.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and not (
                                    self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif not self.currents_users.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and (
                                    self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.currents_users == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.principal_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel_recommend1'

                            elif self.currents_users == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'

                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend3'
                            elif self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'

                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend4'
                            elif self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                        elif self.state == 'cancel_recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend5'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (
                        self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and not (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                                # previous_user = previous_user
                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.currents_users.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and not (
                                    self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.currents_users == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend1'

                            elif self.currents_users.id == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'

                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend3'
                            elif self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend4'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                    else:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.leave_ids.no_of_days and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (
                                                                                               self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend'

                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (
                                                                                               self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_inprogress'
                        elif self.state == 'cancel_inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.currents_users.id:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend1'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                            self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend1'

                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend2'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                         self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend2'

                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend3'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend3'

                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend4'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend4'
                        elif self.state == 'cancel_recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend5'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend5'
                        elif self.state == 'cancel_recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend5'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend5'
                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (
                        self.faculty_staff_id.hod_user) and not (
                        self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.prorec_user and not (
                                    self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'

                                # previous_user = previous_user
                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.currents_users.id == self.faculty_staff_id.dir_hr_user.id and self.faculty_staff_id.prorec_user and not (
                                    self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend'
                            elif self.currents_users == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend1'

                            elif self.currents_users.id == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'


                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (
                                    self.currents_users.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.currents_users = current_user
                                self.previouss_users = previous_user
                                self.state = 'cancel_recommend2'
                            elif self.currents_users == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.currents_users.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.currents_users = current_user.id
                                self.previouss_users = previous_user.id
                                self.state = 'cancel'
                    else:
                        if self.state == 'cancel_draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                                                                            self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend'

                        elif self.state == 'cancel_recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                                                                            self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_inprogress'
                        elif self.state == 'cancel_inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.faculty_staff_id.prorec_user.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.currents_users.id:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend1'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                            self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.prorec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend1'

                        elif self.state == 'cancel_recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend2'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                         self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend2'

                        elif self.state == 'cancel_recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend3'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                                                                      self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend3'

                        elif self.state == 'cancel_recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.currents_users = self.currents_users.id
                            user_exists = False
                            parent_user = False
                            if self.currents_users and self.custom_chain_id and loged_in_user == self.currents_users.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.currents_users,
                                                                                     self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        currents_users = parent_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel_recommend4'
                                    elif not parent_user and self.currents_users.id in self.sanction_user.user_ids.ids:
                                        currents_users = self.faculty_staff_id.dir_hr_user.id
                                        previouss_users = self.currents_users.id
                                        self.currents_users = currents_users
                                        self.previouss_users = previouss_users
                                        self.state = 'cancel'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (
                                            self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids):
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.currents_users = current_user
                                        self.previouss_users = previous_user
                                        self.state = 'cancel_recommend4'



                # elif self.faculty_staff_id and not (
                #         self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))

    @api.depends('leave_ids')
    def _get_start_end_total_dates(self):
        leave_ids = self.env['combination.leaves.setup.conf'].sudo().search([('leave_id','=', self.id)])
        leave_idds = self.env['combination.leaves.setup.conf'].sudo().search([('leave_id','=', self.id)],limit=2, order='id desc')
        if leave_ids and leave_idds:
            self.total_start_date = leave_ids[0].start_date
            self.total_end_date = leave_idds[0].end_date


    @api.depends('leave_ids', 'leave_ids.start_date')
    def _get_urgent_proces_flow(self):
        current_date = date.today()
        self.urgent_leave = False
        remaining = None
        remaining_days = None
        if self.leave_ids and self.total_start_date:
            remaining = current_date - self.total_start_date
            remaining_days = remaining.days
            for leaves in self.leave_ids.leave_type_id:
                if leaves.code in ['EL','EPL', 'EOL', 'SL', 'LPR', 'SabL'] and remaining_days < 17:
                    self.urgent_leave = True
                else:
                    self.urgent_leave = False


    @api.depends('total_start_date', 'total_end_date')
    def _computes_nos_of_leaves(self):
        self.total_no_of_days = 0.0
        for rec in self:
            if rec.total_end_date and rec.total_start_date:
                rec.total_no_of_days = float((rec.total_end_date - rec.total_start_date).days + 1)
        # leave_ids = self.env['combination.leaves.setup.conf'].sudo().search([('leave_id','=', self.id)])
        # if leave_ids:
        #     for leaves in leave_ids:
        #         if leaves.leave_type_id.code == 'SHL':
        #
        #             if leaves.leave_type_id.code == 'CL':
        #                 raise UserError(_('You Cannot Use CL linked with Short Leave'))
    # constrains sirf Study Leave or Subbatical leave pe lage ga
    @api.constrains('leave_ids', 'total_no_of_days')
    def _leave_type_based_constraints(self):
        if self.faculty_staff_id and self.leave_ids:
            for leaves in self.leave_ids.leave_type_id:
                # for leave in self.leave_ids:
                if leaves.code in ['SabL']:
                    if self.faculty_job_status == 'NUST':
                        if self.total_no_of_days > 365:
                                raise UserError(_('You Cannot Apply More Than 1 Year While Including Sabbatical Leave'))
                if leaves.code in ['LND']:
                    if self.total_no_of_days > 30:
                        raise UserError(_('You Cannot Apply More Than 30 Days While Including Leave Not Due'))
                    # if leaves.code in ['CL']:
                    #     if self.total_no_of_days > 15:
                    #         raise UserError(_('You Cannot Apply More Than 15 Days Leave While Including Casual Leave'))




    def action_availeed(self):
        if self.env.ref('cms_hr_leave.action_hr_leave_availeed_availibility').read():
            return self.env.ref('cms_hr_leave.action_hr_leave_availeed_availibility').read()[0]
        else:
            return {
                'type': 'ir.actions.client',
                'tag': 'reload',
            }
    def action_return(self):
        if self.env.ref('cms_hr_leave.action_hr_leave_return').read():
            return self.env.ref('cms_hr_leave.action_hr_leave_return').read()[0]
        else:
            return {
                'type': 'ir.actions.client',
                'tag': 'reload',
            }


    def action_cancel(self):
        if self.env.ref('cms_hr_leave.action_hr_leave_cancel').read():
            return self.env.ref('cms_hr_leave.action_hr_leave_cancel').read()[0]
        else:
            return {
                'type': 'ir.actions.client',
                'tag': 'reload',
            }


    def action_main_conversion(self):
        if self.env.ref('cms_hr_leave.action_hr_leave_main_conversion').read():
            return self.env.ref('cms_hr_leave.action_hr_leave_main_conversion').read()[0]
        else:
            return {
                'type': 'ir.actions.client',
                'tag': 'reload',
            }

    def action_reject(self):
        if self.env.ref('cms_hr_leave.action_hr_leave_reject').read():
            return self.env.ref('cms_hr_leave.action_hr_leave_reject').read()[0]
        else:
            return {
                'type': 'ir.actions.client',
                'tag': 'reload',
            }

    def action_recommend(self):
        if self.env.ref('cms_hr_leave.action_hr_leave_recommend').read():
            return self.env.ref('cms_hr_leave.action_hr_leave_recommend').read()[0]
        else:
            return {
                'type': 'ir.actions.client',
                'tag': 'reload',
            }

    def action_sanction(self):
        if self.env.ref('cms_hr_leave.action_hr_leave_sanction').read():
            return self.env.ref('cms_hr_leave.action_hr_leave_sanction').read()[0]
        else:
            return {
                'type': 'ir.actions.client',
                'tag': 'reload',
            }



    @api.depends('faculty_staff_id')
    def _get_faculty_status_contract_regulars(self):
        faculty_contract_type = None
        faculty_contract_type = None
        faculty_contract_typee = self.env['odoocms.hr.emp.contract.renew'].sudo().search(
            [('faculty_staff_id', '=', self.faculty_staff_id.id), ('hr_emp_con_status', '=', 'A')])
        if self.faculty_staff_id and self.faculty_staff_id.employee_category == 'F':
            faculty_contract_type = \
            dict(faculty_contract_typee.fields_get(allfields=['hr_emp_con_year'])['hr_emp_con_year']['selection'])[
                faculty_contract_typee.hr_emp_con_year]
            # faculty_contract_type = faculty_contract_typee.hr_emp_con_year
        self.faculty_contract_type = faculty_contract_type

    @api.depends('urgent_leave')
    def _get_urgent_leave_tags(self):
        for record in self:
            record.urgent_word_used = None
            if record.urgent_leave:
                for leaves in record.leave_ids:
                    if leaves.leave_type_id.code == 'EL' or leaves.leave_type_id.code == 'EPL' or leaves.leave_type_id.code == 'EOL' or leaves.leave_type_id.code == 'SL' or leaves.leave_type_id.code == 'SabL' or leaves.leave_type_id.code == 'LPR':
                        record.urgent_word_used = '<b>Urgent Leave</b>'
                    else:
                        record.urgent_word_used = ''
            else:
                record.urgent_word_used = ''



    @api.depends('leave_ids')
    def _medical_attachment_show(self):
        self.medi_attachment_show = False
        medical_attachment_show = False
        for leaves in self.leave_ids.leave_type_id:
            if leaves:
                if leaves.code == 'ML':
                    medical_attachment_show = True
                self.medi_attachment_show = medical_attachment_show

    @api.depends('country_id')
    def _get_leave_country_change_hec(self):
        show_hec_field = False
        if self.country_id.id == 19 or self.country_id.id == 227 or self.country_id.id == 104:
            show_hec_field = True
        self.show_hec_field = show_hec_field

    @api.depends('leave_ids')
    def _get_leave_type_study_letter(self):
        show_study_leave_letter_button = False
        for leaves in self.leave_ids.leave_type_id:
            if leaves.code == 'SL':
                show_study_leave_letter_button = True
        self.show_study_leave_letter_button = show_study_leave_letter_button

    @api.depends('faculty_staff_id')
    def _get_contract_age(self):
        contract_date = None
        self.employee_contract_age = None
        self.contract_show = False
        contract_show = False
        if self.faculty_staff_id:
            employee_contract = self.env['odoocms.hr.emp.contract.renew'].sudo().search(
                [('faculty_staff_id.id', '=', self.faculty_staff_id.id),
                 ('hr_emp_con_status', '=', 'A')])
            if employee_contract:
                if self.faculty_staff_id.hr_emp_type == 'C' and self.faculty_staff_id.employee_category == 'S':
                    contract_date = employee_contract.hr_emp_con_end_dt
                self.employee_contract_age = contract_date

            if self.faculty_staff_id.employee_category == 'S':
                contract_show = True
            self.contract_show = contract_show

    @api.depends('faculty_staff_id', 'leave_ids')
    def _get_retirement_age(self):
        retirement_year = None
        new_date_of_birth = None
        self.employee_retirement_age = None
        current_year = date.today().year
        self.retirement_show = False
        retirement_show = False

        if self.faculty_staff_id:
            for leaves in self.leave_ids.leave_type_id.leave_master_id:
                if leaves.code == 'EL' or leaves.code == 'EOL' or leaves.code == 'EPL':
                    if self.faculty_staff_id.hr_emp_type and self.faculty_staff_id.hr_emp_type == 'R':
                        if self.faculty_staff_id.birthday:
                            new_date_of_birth = self.faculty_staff_id.birthday + timedelta(days=60 * 365 + 15)
                            # retirement_year = self.faculty_staff_id.birthday.year + 60
                        self.employee_retirement_age = new_date_of_birth
                        self._get_service_filed_show()
                    elif self.faculty_staff_id.hr_emp_type and self.faculty_staff_id.hr_emp_type == 'C':
                        if self.faculty_staff_id.birthday:
                            new_date_of_birth = self.faculty_staff_id.birthday + timedelta(days=65 * 365 + 16)
                            # retirement_year = self.faculty_staff_id.birthday.year + 20
                        self.employee_retirement_age = new_date_of_birth
                        self._get_service_filed_show()
                    self.retirement_show = True

    @api.depends('faculty_staff_id', 'leave_ids')
    def _get_job_status_faculty_resigned(self):
        self.faculty_job_status_resigned = False
        self.faculty_job_status_retired = False
        faculty_job_status_resigned = None
        faculty_job_status_retired = None
        if self.faculty_staff_id:
            emp_record = self.env['odoocms.hr.emp.rec.master'].sudo().search(
                [('faculty_staff_id.id', '=', self.faculty_staff_id.id), ('hr_emp_status', '=', 'A')])
            for leaves in self.leave_ids.leave_type_id.leave_master_id:
                if leaves.code == 'EL' or leaves.code == 'EOL' or leaves.code == 'EPL':
                    if emp_record.hr_emp_at_status.code == 'RES':
                        faculty_job_status_resigned = True
                        faculty_job_status_retired = False

            self.faculty_job_status_resigned = faculty_job_status_resigned
            self.faculty_job_status_retired = faculty_job_status_retired



    @api.depends('faculty_staff_id')
    def _get_tts_effective_date(self):
        years = None
        duration_diff = None
        tts_effective_date_attached = None
        ttt_faculty_type = False
        self.ttt_faculty_type = False
        tts_effective_date = False
        self.tts_effective_date = False
        self.tts_effective_date_attached = None

        if self.faculty_staff_id:
            emp_record = self.env['odoocms.hr.emp.rec.master'].sudo().search(
                [('faculty_staff_id.id', '=', self.faculty_staff_id.id), ('hr_emp_status', '=', 'A')])
            current_date = date.today()
            if emp_record:
                if emp_record.hr_emp_at_status.code == 'TTT':
                    self.tts_effective_date_attached = emp_record.hr_emp_eff_from_dt
                    duration_diff = relativedelta(current_date, emp_record.hr_emp_eff_from_dt)
                    years = duration_diff.years
                    if years < 3:
                        tts_effective_date = True
                    self.tts_effective_date = tts_effective_date
            if self.faculty_job_status == "('TENURE TRACK',)":
                ttt_faculty_type = True
            self.ttt_faculty_type = ttt_faculty_type

    @api.depends('faculty_staff_id', 'leave_ids')
    def _get_service_filed_show(self):
        show_service_field = False
        self.show_service_field = False
        current_date = date.today()

        joining_record = self.env['odoocms.faculty.staff'].search(
            [('id', '=', self.faculty_staff_id.id)
             ])
        if joining_record:
            service_year = datetime.strptime(joining_record.employed_from, "%Y-%m-%d").date()
            current_service_year = current_date.year - service_year.year
            for leaves in self.leave_ids.leave_type_id:
                if current_service_year < int(leaves.service_duration):
                    show_service_field = True
        self.show_service_field = show_service_field

    @api.depends('faculty_staff_id')
    def _get_prob_faculty_data(self):
        duration_diff = None
        months = None
        show_probation_detailss = False
        self.show_probation_detailss = False
        current_date = date.today()
        if self.faculty_staff_id:
            emp_rec_id = self.env['odoocms.hr.emp.probation'].sudo().search(
                [('faculty_staff_id.id', '=', self.faculty_staff_id.id)], limit=1, order='id desc')
            if emp_rec_id:

                if emp_rec_id.hr_emp_prob_end_dt and current_date <= emp_rec_id.hr_emp_prob_end_dt:
                    show_probation_detailss = True
                self.show_probation_detailss = show_probation_detailss
                if not emp_rec_id.hr_emp_prob_end_dt:
                    show_probation_detailss = True
                self.show_probation_detailss = show_probation_detailss

    @api.depends('faculty_staff_id')
    def _get_job_status_faculty(self):
        self.faculty_job_status = None
        faculty_job_status = None
        if self.faculty_staff_id:
            emp_record = self.env['odoocms.hr.emp.rec.master'].sudo().search(
                [('faculty_staff_id.id', '=', self.faculty_staff_id.id), ('hr_emp_status', '=', 'A')])
            if self.faculty_staff_id.employee_category == 'F':
                faculty_job_status = \
                dict(emp_record.fields_get(allfields=['hr_emp_sub_cat'])['hr_emp_sub_cat']['selection'])[
                    emp_record.hr_emp_sub_cat]
                # faculty_job_status = emp_record.hr_emp_sub_cat.get_label()
            self.faculty_job_status = faculty_job_status

    @api.depends('faculty_staff_id')
    def _get_ipfp_project_faculty(self):
        self.projects_ipfp = None
        projects_ipfp = None
        if self.faculty_staff_id:
            emp_record = self.env['odoocms.hr.emp.rec.master'].sudo().search(
                [('faculty_staff_id.id', '=', self.faculty_staff_id.id), ('hr_emp_status', '=', 'A'),('hr_emp_project','=','I')])
            if emp_record and self.faculty_staff_id.employee_category == 'F':
                projects_ipfp = \
                    dict(emp_record.fields_get(allfields=['hr_emp_project'])['hr_emp_project']['selection'])[
                        emp_record.hr_emp_project]
            self.projects_ipfp = projects_ipfp


    @api.depends('faculty_staff_id')
    def _get_emp_type_status_faculty(self):
        self.faculty_emp_type = None
        faculty_emp_type = None
        if self.faculty_staff_id:
            emp_record = self.env['odoocms.hr.emp.rec.master'].sudo().search(
                [('faculty_staff_id.id', '=', self.faculty_staff_id.id), ('hr_emp_status', '=', 'A')])
            faculty_emp_type = \
                dict(emp_record.fields_get(allfields=['hr_emp_type'])['hr_emp_type']['selection'])[
                    emp_record.hr_emp_type]
            # faculty_job_status = emp_record.hr_emp_sub_cat.get_label()
            self.faculty_emp_type = faculty_emp_type





    @api.depends('comment_ids', 'state')
    def _compute_users(self):
        currs_users = None
        prevs_users = None
        if self.comment_ids:
            comment_ids = self.env['cms.hr.emp.leave.comments'].search(
                [('emp_leave_id.id', '=', self.id), ('action', '=', 'Leave entry')])
            if self.comment_ids:
                if self.state == 'sanction':
                    if comment_ids:
                        prevs_users = self.curr_user
                        self.prev_user = prevs_users
                        curr_user = comment_ids.create_uid
                    self.curr_user = curr_user

    @api.depends('faculty_staff_id')
    def _get_emp_fields(self):
        show_faculty_fields = False
        self.show_emp_fields = False
        self.faculty_fac_type = False
        show_emp_fields = False
        if self.faculty_staff_id:
            if self.faculty_staff_id.employee_category == 'F':
                show_faculty_fields = True
                self.faculty_fac_type = show_faculty_fields
                self.show_emp_fields = False
            elif self.faculty_staff_id.employee_category == 'S':
                show_emp_fields = True
                self.show_emp_fields = show_emp_fields
                self.faculty_fac_type = False

class EmployeeLeavesAbsentMain(models.Model):
    _name = 'cms.hr.emp.leaves.absent.main'
    _description = 'Emaployee Absent Leave Form'
    _inherit = ['mail.thread', 'mail.activity.mixin']
    _rec_name = 'faculty_staff_id'




    faculty_staff_id = fields.Many2one('odoocms.faculty.staff', 'Employee ID', required=True)
    aar_idd = fields.Char('AAR Scoring', compute='_show_aar_scoringg', store=True)
    aar_yearr = fields.Char('AAR Scoring Year', compute='_show_aar_scoringg', store=True)
    projects_ipfpp = fields.Char('Faculty Project', compute='_get_ipfp_project_facultyy')
    category_id = fields.Selection('Category', related='faculty_staff_id.employee_category')
    support_staff_category_idd = fields.Char('Support Staff Category', compute='_get_support_staff_categoryy')

    father_name = fields.Char(related='faculty_staff_id.father_name', string="Father Name")
    designation = fields.Many2one(related='faculty_staff_id.designation', string="Designation")
    department_id = fields.Many2one(related='faculty_staff_id.department', string="Department")
    institute_id = fields.Many2one(related='faculty_staff_id.institute', string="School/College")
    leave_apply_for = fields.Selection([('FL', 'Fresh Leave'), ('LE', 'Leave Extension')], string='Applying For?',
                                       required=True, tracking=True)

    total_start_date = fields.Date('Total Start Date', compute='_get_start_end_total_datesss', store=True)
    total_end_date = fields.Date('Total End Date', compute='_get_start_end_total_datesss', store=True)
    total_no_of_days = fields.Float('Total No of Days', compute="_computes_nos_of_leavesss", store=True)




    comment_ids = fields.One2many('cms.hr.emp.leave.comments', 'emp_leave_id')



    state = fields.Selection(
        [('draft', 'Draft'),('cancel_draft', 'Cancel-Draft'), ('return', 'Return'), ('recommend', 'In Progress'),('cancel_recommend', 'Cancel In Progress'),('inprogress', 'In Process'),('cancel_inprogress', 'Cancel In Process'),('recommend1', 'Recommended-S1'),('recommend2', 'Recommended-S2'),('recommend3', 'Recommended-S3'),('recommend4', 'Recommended-S4'),('recommend5', 'Recommended-S5'), ('sanction', 'Sanctioned'),
         ('availed', 'Availed'), ('cancel_recommend1', 'Cancel R-1'),('cancel_recommend2', 'Cancel R-2'), ('cancel_recommend3', 'Cancel R-3'),('cancel_recommend4', 'Cancel R-4'),('cancel_recommend5', 'Cancel R-5'),

         ('reject', 'Rejected'), ('cancel', 'Cancelled')],
        'Status', default='draft', tracking=True)

    @api.onchange('location')
    def _get_location_out(self):
        show_out_location_button = False
        if self.location == 'out':
            show_out_location_button = True
        self.show_out_location_button = show_out_location_button

    @api.onchange('location')
    def _get_location_local(self):
        show_local_location_button = False
        if self.location == 'local':
            show_local_location_button = True
        self.show_local_location_button = show_local_location_button

    @api.onchange('location')
    def _get_location_province(self):
        if self.location == 'local' or self.location == 'out':
            self.province_id = 28
            print('3333333333333333333333333')
            self.city_id = 1398
        else:
            print('4444444444444444444444444444444444')
            self.province_id = ''
            self.city_id = ''

    @api.onchange('location')
    def _location_dependency(self):
        if self.location == 'local' or self.location == 'out':
            self.country_id = 177
        else:
            self.country_id = ''

    @api.onchange('location')
    def _location_dependency_onabroad(self):
        abroad_section = False
        self.abroad_section = False
        if self.location == 'abroad':
            abroad_section = True
        self.abroad_section = abroad_section




    location = fields.Selection(
        [('local', 'Local'), ('out', 'Outstation'), ('abroad', 'Abroad')], 'Location', default='local', tracking=True)
    country_id = fields.Many2one('res.country', string='Country')


    province_id = fields.Many2one('odoocms.province', string='Province')
    city_id = fields.Many2one('odoocms.domicile', string='City',
                              domain="[('province_id', '=?', province_id)]")

    @api.onchange('purpose_id')
    def _change_purpose(self):
        for rec in self:
            if rec.purpose_id:
                return {'domain': {
                    'sub_purpose_id': [('leave_sub_purposes.id', '=', rec.purpose_id.id)]}}

    @api.onchange('purpose_id')
    def _get_other_purpose(self):
        other_purpose_field = False
        self.other_purpose_field = False
        if self.purpose_id.code == 'other':
            other_purpose_field = True
        self.other_purpose_field = other_purpose_field

    @api.onchange('leave_ids')
    def _get_short_leaves_valuess(self):
        self.show_short_leave_button = False
        show_short_leave_button = False
        if self.leave_ids:
            for rec in self.leave_ids:
                if rec.leave_type_id.code == 'SHL':
                    show_short_leave_button = True
                self.show_short_leave_button = True

    show_short_leave_button = fields.Boolean(string="Show Short Leave Button")
    # urgent_leave = fields.Boolean(string="Urgent Leave?" , compute='_get_urgent_proces_flow')
    urgent_leave = fields.Boolean(string="Urgent Leave?" , compute='_get_urgent_proces_flow')
    urgent_leave_reason = fields.Text('Reason For Urgent leave')
    urgent_leave_support = fields.Boolean('Support Urgent Leave?')
    urgent_word_used = fields.Html(compute='_get_urgent_leave_tag')
    purpose_id = fields.Many2one('cms.hr.leave.purpose', string="Purpose of Leave", tracking=True)
    sub_purpose_id = fields.Many2one('cms.hr.leave.type.sub.categories', string="Sub Purpose of Leave", tracking=True)
    leave_ids = fields.One2many('combination.leaves.setup.conf', 'leave_idd', 'Apply Leaves')
    prev_user = fields.Many2one('res.users', string="Previous Position User", compute='send_leave_records', store=True)
    curr_user = fields.Many2one('res.users', string="Current Position User", compute='send_leave_records', store=True,
                                tracking=True)
    sanction_user = fields.Many2one('cms.hr.leave.sanction.authority', 'Sanction User', tracking=True,
                                    compute='_get_custom_sanction_users', store=True)
    custom_chain_id = fields.Many2one('cms.hr.leave.user.tree', 'Custom flow', compute='_computes_configss', store=True)
    configure_id = fields.Many2one('cms.hr.leave.conf', string='Leave Configuration Ref', compute="_computes_configss",
                                   store=True)
    leave_type_id = fields.Many2one('cms.hr.leave.type', string='Prioritized Leave Type',
                                    compute='_get_related_leave_priorityss')

    @api.onchange('abroad')
    def _abroad_dependency_onfamily(self):
        proceeding_abroad = False
        self.proceeding_abroad = False
        if self.abroad:
            proceeding_abroad = True
        self.proceeding_abroad = proceeding_abroad

    abroad = fields.Boolean(string='Proceeding Abroad with family?')
    emergency_name = fields.Char(string="name")
    emergency_relation = fields.Char(string="Relation with Applicant")
    emergency_contact = fields.Char(string="Contact No")
    passport_no = fields.Char(related='faculty_staff_id.passport_ids.passport_no',string="Passport No", store=True)
    passport_expiry = fields.Date(related='faculty_staff_id.passport_ids.date_expiry',string="Passport Expiry Date")
    passport_valid = fields.Date(string="Passport Validity Date")
    passport_scan = fields.Binary('Scanned Copy Passport along with signature page')
    foreign_leave_address1 = fields.Char(string="Foreign Address Line 1")
    foreign_leave_address2 = fields.Char(string="Foreign Address Line 2")
    foreign_email = fields.Char(string="Email")
    foreign_phone = fields.Char(string="Phone")
    foreign_fax = fields.Char(string="Fax")
    nust_accommodation = fields.Selection(
        [('yf', 'Yes, Family Accommodation'), ('ys', 'Yes, Single Accommodation'), ('n', 'No')],
        'Availing NUST Accommodation', default='n')
    family_ids = fields.One2many('cms.hr.emp.leave.family', 'family_leave_idd')
    visa_required = fields.Boolean(string='I need visa issuance letter for Embassy / High Commission')
    noc_required = fields.Boolean(string='I need No Objection Certificate for Travelling')
    visa_att = fields.Binary('Attach scanned copy of Issued Visa if already granted', tracking=True, attachment=True)
    medical_attachment = fields.Binary('Medical Certificate', tracking=True, attachment=True)
    hec_approving_letter = fields.Binary('HEC Approving Letter')
    study_offer_letter = fields.Binary('Attach Offer Letter for Study Leave')
    other_purpose_leave = fields.Char('Other Purpose of Leave')
    # sanction_user = fields.Many2one('res.users', string='Sanction User', compute="_compute_sanction_user", store=True)
    # configure_id = fields.Many2one('cms.hr.leave.conf', string='Leave Configuration Ref', compute="_compute_config",
    #                                store=True)
    # custom_chain_id = fields.Many2one('cms.hr.leave.user.tree', string='Custom Approval Chain Ref',
    #                                   compute="_compute_config", store=True)


    # Flags
    faculty_job_status = fields.Char('Faculty Job Status', compute='_get_job_status_faculty')
    faculty_emp_type = fields.Char('Employee Type', compute='_get_emp_type_status_faculty')
    faculty_fac_type = fields.Char('Faculty Type', compute='_get_emp_fields')
    show_emp_fields = fields.Boolean('Show employee data', compute='_get_emp_fields')
    show_probation_detailss = fields.Boolean('Show probation data', compute='_get_prob_faculty_data')
    show_service_field = fields.Boolean(string="Show Service Field", compute='_get_service_filed_show')
    tts_effective_date = fields.Boolean('TTS Less Than 3 Years', compute='_get_tts_effective_date')
    ttt_faculty_type = fields.Boolean('TTS Less Than 3 Years field show', compute='_get_tts_effective_date')
    tts_effective_date_attached = fields.Char('TTS Effective Date', compute='_get_tts_effective_date')
    faculty_job_status_resigned = fields.Boolean(string="Show Job Status resigned",
                                                 compute='_get_job_status_faculty_resigned')
    faculty_job_status_retired = fields.Boolean(string="Show Job Status retired",
                                                compute='_get_job_status_faculty_resigned')

    employee_retirement_age = fields.Char('Retirement Date', compute='_get_retirement_age')
    employee_contract_age = fields.Char('Contract Date', compute='_get_contract_age')
    retirement_show = fields.Boolean('Retirement Show', compute='_get_retirement_age')
    contract_show = fields.Boolean('Contract Show', compute='_get_contract_age')
    show_out_location_button = fields.Boolean(string="Show Out Location Field", default='False')
    show_local_location_button = fields.Boolean(string="Show Out Location Field", default='False')
    abroad_section = fields.Boolean(string="Show Abroad Section", default='False')
    proceeding_abroad = fields.Boolean(string="Show Abroad Proceeding", default='False')
    show_study_leave_letter_button = fields.Boolean(string="Show Study Field Letter Field",
                                                    compute='_get_leave_type_study_letter')
    show_hec_field = fields.Boolean(string="Show hecField", compute='_get_leave_country_change_hec')
    medi_attachment_show = fields.Boolean('Medical Attchmanet Show', compute='_medical_attachment_show')
    other_purpose_field = fields.Boolean('Medical Attchmanet Show')
    faculty_contract_type = fields.Char('Faculty Type', compute='_get_faculty_status_contract_regularss')
    show_recommended_states_button = fields.Boolean('Show Recommended Button',
                                                    compute='_compute_shows_security_buttons')
    show_sanction_states_button = fields.Boolean('Show Sanction Button', compute='_compute_shows_security_buttons')

    @api.model
    def _compute_shows_security_buttons(self):
        for rec in self:
            current_user_login = rec.env.uid
            show_sanction_states_button = False
            show_availed_button = False
            # self.show_availed_button = Falsere
            if current_user_login in rec.sanction_user.user_ids.ids:
                show_sanction_states_button = True

            rec.show_sanction_states_button = show_sanction_states_button
            show_recommended_states_button = False
            if not (current_user_login in rec.sanction_user.user_ids.ids) and rec.curr_user.id == rec.env.uid:
                show_recommended_states_button = True
            # if rec.curr_user.id != rec.env.uid:
            #     show_recommend_button = False

            rec.show_recommended_states_button = show_recommended_states_button


    def action_absents_processes(self):
        if self.env.ref('cms_hr_leave.action_hr_leave_absent_conv_canc_process').read():
            return self.env.ref('cms_hr_leave.action_hr_leave_absent_conv_canc_process').read()[0]
        else:
            return {
                'type': 'ir.actions.client',
                'tag': 'reload',
            }

    def action_recommend(self):
        if self.env.ref('cms_hr_leave.action_hr_leave_recommend').read():
            return self.env.ref('cms_hr_leave.action_hr_leave_recommend').read()[0]
        else:
            return {
                'type': 'ir.actions.client',
                'tag': 'reload',
            }

    def action_sanction(self):
        if self.env.ref('cms_hr_leave.action_hr_leave_sanction').read():
            return self.env.ref('cms_hr_leave.action_hr_leave_sanction').read()[0]
        else:
            return {
                'type': 'ir.actions.client',
                'tag': 'reload',
            }


    @api.depends('faculty_staff_id')
    def _get_faculty_status_contract_regularss(self):
        faculty_contract_type = None
        faculty_contract_type = None
        faculty_contract_typee = self.env['odoocms.hr.emp.contract.renew'].sudo().search(
            [('faculty_staff_id', '=', self.faculty_staff_id.id), ('hr_emp_con_status', '=', 'A')])
        if self.faculty_staff_id and self.faculty_staff_id.employee_category == 'F':
            faculty_contract_type = \
                dict(faculty_contract_typee.fields_get(allfields=['hr_emp_con_year'])['hr_emp_con_year']['selection'])[
                    faculty_contract_typee.hr_emp_con_year]
            # faculty_contract_type = faculty_contract_typee.hr_emp_con_year
        self.faculty_contract_type = faculty_contract_type

    @api.depends('leave_ids.leave_type_id')
    def _get_related_leave_priorityss(self):
        self.leave_type_id = None
        leave_type_ids = self.env['cms.hr.leave.type'].sudo().search([('code','=','AWLAP')])
        if len(self.leave_ids) == 1 and self.leave_ids.leave_type_id.code == 'Abs':
            if self.faculty_staff_id:
                if self.leave_ids:
                    sorted_leaves = self.leave_ids.sorted(key=lambda r: r.leave_type_id.priority)
                    if sorted_leaves:
                        self.leave_type_id = sorted_leaves[0].leave_type_id.id
        elif len(self.leave_ids) > 1:

            if self.faculty_staff_id:
                if self.leave_ids:
                    self.leave_type_id = leave_type_ids

    @api.depends('faculty_staff_id', 'leave_type_id')
    def _computes_configss(self):
        for rec in self:
            print('Configuration')
            if len(rec.leave_ids) >= 1 and rec.faculty_staff_id and rec.leave_ids and rec.leave_ids.leave_type_id.ids and rec.leave_type_id.id and rec.total_start_date and rec.total_no_of_days and rec.total_end_date:
                print('asd')
                # if self.leave_type_abs.code == 'Abs':
                #     self.configure_id = self.leave_type_abs.configure_ids.display_name
                if len(rec.leave_ids) >= 1 and rec.leave_type_id:

                    leave_config_ids = self.env['cms.hr.leave.type'].sudo().search([
                        ('leave_master_id', '=', rec.leave_type_id.leave_master_id.id),
                        ('active', 'in', [True, False])])
                    if leave_config_ids:

                        # Effective date check
                        if len(leave_config_ids) > 1:
                            leave_config_date_ids = leave_config_ids.filtered(
                                lambda l: l.date_from <= rec.leave_ids.start_date <= l.date_to).sorted(
                                key=lambda r: r.date_from, reverse=True)
                            if leave_config_date_ids:
                                leave_config_ids = leave_config_date_ids[0]
                            else:
                                raise UserError(_("Leave Type not Configured w.r.t Dates"))
                    else:
                        raise UserError(_("Leave Type not Configured"))

                    # hr_emp_type
                    print(rec.faculty_staff_id.hr_emp_type)
                    if leave_config_ids.configure_ids:
                        print('asd')

                        # Employee Type
                        if leave_config_ids.configure_ids.filtered(lambda l: l.employee_type.code == 'A'):
                            leave_config_ids = leave_config_ids.configure_ids.filtered(
                                lambda l: l.employee_type.code == 'A')
                        else:
                            if rec.faculty_staff_id.hr_emp_type:
                                leave_config_ids = leave_config_ids.configure_ids.filtered(
                                    lambda l: l.employee_type.code == rec.faculty_staff_id.hr_emp_type)
                                if leave_config_ids:
                                    leave_config_ids = leave_config_ids
                                else:
                                    raise UserError(_("Leave Type not Configured for this Employee Type"))
                            else:
                                raise UserError(_("Employee type not defined in FMS"))

                        # Employee Category
                        if leave_config_ids.filtered(lambda l: l.employee_category.code == 'A'):
                            leave_config_ids = leave_config_ids.filtered(
                                lambda l: l.employee_category.code == 'A')
                        else:
                            if rec.faculty_staff_id.employee_category:
                                emp_fms_cat = rec.faculty_staff_id.employee_category
                                fms_ebps = rec.faculty_staff_id.ebps

                                emp_cat_code = False
                                if emp_fms_cat == 'S':
                                    if fms_ebps.hr_scale_no in ['17', '18',
                                                                '19'] and rec.faculty_staff_id.institute.code == 'UMO':
                                        emp_cat_code = 'SSO'
                                    elif fms_ebps.hr_scale_no in ['17', '18',
                                                                  '19'] and rec.faculty_staff_id.institute.code != 'UMO':
                                        emp_cat_code = 'SSO-I'
                                    elif fms_ebps.hr_scale_no and fms_ebps.hr_scale_no not in ['17', '18', '19',
                                                                                               '20', '21',
                                                                                               '22'] and rec.faculty_staff_id.institute.code == 'UMO':
                                        emp_cat_code = 'SSNG'
                                    elif fms_ebps.hr_scale_no and fms_ebps.hr_scale_no not in ['17', '18', '19',
                                                                                               '20', '21',
                                                                                               '22'] and not rec.faculty_staff_id.institute.code == 'UMO':
                                        emp_cat_code = 'SSNG-I'
                                    elif fms_ebps.hr_scale_no == '20' and rec.faculty_staff_id.institute.code == 'UMO':
                                        emp_cat_code = 'Offr-20'
                                    elif fms_ebps.hr_scale_no == '21':
                                        emp_cat_code = 'Offr-21'
                                if emp_fms_cat == 'F':
                                    emp_cat_code = 'F'
                                if rec.faculty_staff_id.designation.hr_desig_short_desc in ['PRINCIPAL', 'PRIN']:
                                    emp_cat_code = 'Prin'

                                add_duty = self.env['odoocms.hr.emp.add.duty'].sudo().search(
                                    [('faculty_staff_id', '=', rec.faculty_staff_id.id),
                                     ('hr_emp_ad_status', '=', 'A')],
                                    order='hr_emp_ad_start_dt desc', limit=1)
                                if add_duty:
                                    if add_duty.hr_emp_ad_duty:
                                        if add_duty.hr_emp_ad_duty.hr_desig_short_desc:
                                            if add_duty.hr_emp_ad_duty.hr_desig_short_desc in ['PRIN', 'PRINCIPAL']:
                                                emp_cat_code = 'Prin'

                                print('sssssssssssssssss:', emp_cat_code)
                                leave_config_ids = leave_config_ids.filtered(
                                    lambda l: l.employee_category.code == emp_cat_code)
                                if leave_config_ids:
                                    leave_config_ids = leave_config_ids
                                else:
                                    raise UserError(_("Leave Type not Configured for this Employee Category"))
                            else:
                                raise UserError(_("Employee Category not defined in FMS"))

                        # No of leaves
                        # if rec.leave_apply_for == 'LE' and rec.no_of_days < rec.leaves_availed:

                        leave_config_ids = leave_config_ids.filtered(
                            lambda l: l.min_leaves <= rec.total_no_of_days <= l.max_leaves)
                        if leave_config_ids:
                            if len(leave_config_ids) > 1:
                                raise UserError(_("More than one leave configured for provided data"))
                            else:
                                # Assign leave config to emp leave record
                                rec.configure_id = leave_config_ids.id
                                if leave_config_ids.custom_flow and leave_config_ids.custom_flow_id:
                                    # Assign custom flow to emp leave record
                                    rec.custom_chain_id = leave_config_ids.custom_flow_id.id
                        else:
                            raise UserError(_("Leave not configured w.r.t. min and max no of leaves"))
                    else:
                        raise UserError(_("Leave Type not Configured"))

                        # print('leave_config_ids', leave_config_ids)

    @api.depends('faculty_staff_id', 'leave_ids', 'configure_id')
    def _get_custom_sanction_users(self):
        configure_id = None
        if self.faculty_staff_id:
            if self.leave_ids and self.leave_ids.leave_type_id.ids:
                if self.configure_id:
                    configure_id = self.configure_id
                    if configure_id.sanction_authority:
                        self.sanction_user = configure_id.sanction_authority

    @api.depends('faculty_staff_id', 'state', 'sanction_user', 'leave_ids','custom_chain_id', 'configure_id','leave_type_id')
    def send_leave_records(self):
        if self.faculty_staff_id:
            if self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and self.faculty_staff_id.ebps and self.faculty_staff_id.ebps.hr_scale_no and self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.curr_user = current_user
                sanction_user = None
                if self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.hod_user and not [self.faculty_staff_id.hod_user.id] == self.sanction_user.user_ids.ids:
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.principal_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'recommend1'

                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.faculty_staff_id.principal_user and  (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and  self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (
                                                                                         self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.dir_hr_user.id
                                        previous_user = self.curr_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                                    elif self.faculty_staff_id.prorec_user and (
                                            self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.dir_hr_user.id
                                        previous_user = self.curr_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'sanction'

                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.prorec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.faculty_staff_id.prorec_user and (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.prorec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.prorec_user.id and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.prorec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.prorec_user.id and self.faculty_staff_id.prorec_user and (self.curr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.prorec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.prorec_user.id and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and not (self.faculty_staff_id.prorec_user) and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft'  and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.rec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            if self.faculty_staff_id.rec_user and  (
                                    self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.rec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.rec_user.id and self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.rec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.rec_user.id and self.faculty_staff_id.rec_user and  (self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.rec_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.rec_user.id and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'



                # elif self.faculty_staff_id and not (self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))

            elif not self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and not self.faculty_staff_id.ebps and not self.faculty_staff_id.ebps.hr_scale_no and not self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.curr_user = current_user
                sanction_user = None
                if self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.hod_user and not [self.faculty_staff_id.hod_user.id] == self.sanction_user.user_ids.ids:
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.principal_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'recommend1'

                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'



                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and  self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                        elif self.state == 'recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.dir_hr_user.id and self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids  and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.prorec_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.prorec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'



                # elif self.faculty_staff_id and not (self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))
            elif not self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and self.faculty_staff_id.ebps and self.faculty_staff_id.ebps.hr_scale_no and self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.curr_user = current_user
                sanction_user = None
                if self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.hod_user and not [self.faculty_staff_id.hod_user.id] == self.sanction_user.user_ids.ids:
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.principal_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'recommend1'

                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'



                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            if self.faculty_staff_id.principal_user and  (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                            elif not self.curr_user.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and  self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                        elif self.state == 'recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            if self.faculty_staff_id.prorec_user and (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.dir_hr_user.id and self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                            elif not self.curr_user.id == self.faculty_staff_id.dir_hr_user.id and self.faculty_staff_id.prorec_user and (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids  and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.prorec_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.prorec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'



                # elif self.faculty_staff_id and not (self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))
            elif not self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and self.faculty_staff_id.ebps and self.faculty_staff_id.ebps.hr_scale_no and not self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.curr_user = current_user
                sanction_user = None
                if self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            if self.faculty_staff_id.hod_user and  (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and  (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.principal_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'recommend1'

                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        # elif self.curr_user ==  self.sanction_user.user_ids.id and loged_in_user == self.faculty_staff_id.faculty_user.id:
                        #     current_user = self.faculty_staff_id.hod_user.id
                        #     previous_user = self.faculty_staff_id.faculty_user.id
                        #     self.curr_user = current_user
                        #     self.prev_user = previous_user
                        #     self.state = 'sanction'
                        # elif self.curr_user == self.sanction_user.user_ids.id and loged_in_user == self.faculty_staff_id.faculty_user.id:
                        #     current_user = self.faculty_staff_id.faculty_user.id
                        #     previous_user = self.faculty_staff_id.principal_user.id
                        #     self.curr_user = current_user
                        #     self.prev_user = previous_user
                        #     self.state = 'sanction'
                        # elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user.id == self.sanction_user.user_ids.id:
                        #     current_user = self.faculty_staff_id.prorec_user.id
                        #     previous_user = self.faculty_staff_id.principal_user.id
                        #     self.curr_user = current_user
                        #     self.prev_user = previous_user
                        #     self.state = 'sanction'
                        # elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user.id == self.sanction_user.user_ids.id:
                        #     current_user = self.faculty_staff_id.rec_user.id
                        #     previous_user = self.faculty_staff_id.prorec_user.id
                        #     self.curr_user = current_user
                        #     self.prev_user = previous_user
                        #     self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and  self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.hod_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.hod_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            # self.curr_user = self.faculty_staff_id.hod_user.id
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.hod_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                        elif self.state == 'recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                        elif self.state == 'recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.dir_hr_user.id and self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids  and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.prorec_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.prorec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'



                # elif self.faculty_staff_id and not (self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))
            elif self.faculty_staff_id.institute.code == 'UMO' and self.leave_type_id and self.faculty_staff_id.ebps and self.faculty_staff_id.ebps.hr_scale_no and not self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22']:
                loged_in_user = self.env.uid
                previous_user = None
                # current_user = self.faculty_staff_id.faculty_user.id
                # self.curr_user = current_user
                sanction_user = None
                if self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:

                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            if self.faculty_staff_id.hod_user and (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif not self.curr_user.id == self.faculty_staff_id.hod_user.id and self.faculty_staff_id.hod_user and  (self.faculty_staff_id.hod_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.hod_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.principal_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'recommend1'

                            elif self.curr_user == self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.hod_user.id:
                                previous_user = self.faculty_staff_id.hod_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.principal_user.id and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.prorec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user  and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            # and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids)
                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend5'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        # elif self.curr_user ==  self.sanction_user.user_ids.id and loged_in_user == self.faculty_staff_id.faculty_user.id:
                        #     current_user = self.faculty_staff_id.hod_user.id
                        #     previous_user = self.faculty_staff_id.faculty_user.id
                        #     self.curr_user = current_user
                        #     self.prev_user = previous_user
                        #     self.state = 'sanction'
                        # elif self.curr_user == self.sanction_user.user_ids.id and loged_in_user == self.faculty_staff_id.faculty_user.id:
                        #     current_user = self.faculty_staff_id.faculty_user.id
                        #     previous_user = self.faculty_staff_id.principal_user.id
                        #     self.curr_user = current_user
                        #     self.prev_user = previous_user
                        #     self.state = 'sanction'
                        # elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user.id == self.sanction_user.user_ids.id:
                        #     current_user = self.faculty_staff_id.prorec_user.id
                        #     previous_user = self.faculty_staff_id.principal_user.id
                        #     self.curr_user = current_user
                        #     self.prev_user = previous_user
                        #     self.state = 'sanction'
                        # elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user.id == self.sanction_user.user_ids.id:
                        #     current_user = self.faculty_staff_id.rec_user.id
                        #     previous_user = self.faculty_staff_id.prorec_user.id
                        #     self.curr_user = current_user
                        #     self.prev_user = previous_user
                        #     self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and  self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.hod_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.hod_user and not (self.faculty_staff_id.hod_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.hod_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            # self.curr_user = self.faculty_staff_id.hod_user.id
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.hod_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                        elif self.state == 'recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (self.faculty_staff_id.hod_user) and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.principal_user.id and self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.principal_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user.id
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.principal_user and self.faculty_staff_id.principal_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.principal_user.id:
                                previous_user = self.faculty_staff_id.principal_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and not (
                                    self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend3'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend4'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.principal_user and not (self.faculty_staff_id.principal_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.principal_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.principal_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'
                        elif self.state == 'recommend4' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                        elif self.state == 'recommend5' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend5'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.principal_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend5'
                elif self.faculty_staff_id and self.faculty_staff_id.faculty_user and not (self.faculty_staff_id.hod_user) and not (self.faculty_staff_id.principal_user) and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user:
                    if not self.custom_chain_id:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'

                                # previous_user = previous_user
                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:
                            if not self.curr_user.id == self.faculty_staff_id.dir_hr_user.id and self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.dir_hr_user.id in self.sanction_user.user_ids.ids):
                                current_user = self.faculty_staff_id.dir_hr_user.id
                                previous_user = self.faculty_staff_id.faculty_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend'
                            elif self.curr_user == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user.id
                                current_user = self.faculty_staff_id.prorec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend1'

                            elif self.curr_user.id == self.faculty_staff_id.dir_hr_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.dir_hr_user.id:
                                previous_user = self.faculty_staff_id.dir_hr_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'


                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.prorec_user and self.faculty_staff_id.prorec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.prorec_user.id:
                                previous_user = self.faculty_staff_id.prorec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids:

                            if self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and not (self.curr_user.id in self.sanction_user.user_ids.ids) and self.faculty_staff_id.rec_user.id and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user.id
                                current_user = self.faculty_staff_id.rec_user.id
                                self.curr_user = current_user
                                self.prev_user = previous_user
                                self.state = 'recommend2'
                            elif self.curr_user == self.faculty_staff_id.rec_user and self.faculty_staff_id.rec_user and self.curr_user.id in self.sanction_user.user_ids.ids and loged_in_user == self.faculty_staff_id.rec_user.id:
                                previous_user = self.faculty_staff_id.rec_user
                                current_user = self.faculty_staff_id.dir_hr_user
                                self.curr_user = current_user.id
                                self.prev_user = previous_user.id
                                self.state = 'sanction'
                    else:
                        if self.state == 'draft' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids  and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids:
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend'

                        elif self.state == 'recommend' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.faculty_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'inprogress'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.prorec_user.id
                                        previous_user = self.faculty_staff_id.faculty_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'inprogress'
                        elif self.state == 'inprogress' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.faculty_staff_id.prorec_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists and loged_in_user == self.curr_user.id:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend1'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.prorec_user and not (self.faculty_staff_id.prorec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.prorec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend1'

                        elif self.state == 'recommend1' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend2'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec_user.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend2'

                        elif self.state == 'recommend2' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend3'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id) in self.sanction_user.user_ids.ids :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend3'

                        elif self.state == 'recommend3' and self.faculty_staff_id and self.sanction_user and self.leave_ids and self.leave_ids.leave_type_id.ids and self.custom_chain_id:
                            self.curr_user = self.curr_user.id
                            user_exists = False
                            parent_user = False
                            if self.curr_user and self.custom_chain_id and loged_in_user == self.curr_user.id:
                                user_exists, parent_user = get_custom_chain_flow_req(self.curr_user, self.custom_chain_id)
                                print('fffffffffffffffffffffffff', user_exists, parent_user)
                                if user_exists:
                                    if parent_user:
                                        curr_user = parent_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'recommend4'
                                    elif not parent_user and self.curr_user.id in self.sanction_user.user_ids.ids:
                                        curr_user = self.faculty_staff_id.dir_hr_user.id
                                        prev_user = self.curr_user.id
                                        self.curr_user = curr_user
                                        self.prev_user = prev_user
                                        self.state = 'sanction'
                                if not user_exists:
                                    if self.faculty_staff_id.rec_user and not (self.faculty_staff_id.rec_user.id in self.sanction_user.user_ids.ids) :
                                        current_user = self.faculty_staff_id.rec.id
                                        previous_user = self.faculty_staff_id.rec_user.id
                                        self.curr_user = current_user
                                        self.prev_user = previous_user
                                        self.state = 'recommend4'



                # elif self.faculty_staff_id and not (self.faculty_staff_id and self.faculty_staff_id.faculty_user and self.faculty_staff_id.hod_user and self.faculty_staff_id.principal_user and self.faculty_staff_id.prorec_user and self.faculty_staff_id.rec_user):
                #     raise UserError(_('Leave Hierarchy Not Defined...!!!'))

    @api.depends('leave_ids', 'leave_ids.start_date')
    def _get_urgent_proces_flow(self):
        current_date = date.today()
        self.urgent_leave = False
        remaining = None
        remaining_days = None
        if self.leave_ids and self.total_start_date:
            remaining = current_date - self.total_start_date
            remaining_days = remaining.days
            for leaves in self.leave_ids.leave_type_id:
                if leaves.code in ['EL', 'EPL', 'EOL', 'SL', 'LPR', 'SabL'] and remaining_days < 17:
                    self.urgent_leave = True
                else:
                    self.urgent_leave = False

    @api.depends('leave_ids')
    def _get_start_end_total_datesss(self):
        leave_ids = self.env['combination.leaves.setup.conf'].sudo().search([('leave_idd', '=', self.id)])
        leave_idds = self.env['combination.leaves.setup.conf'].sudo().search([('leave_idd', '=', self.id)], limit=2,
                                                                             order='id desc')
        if leave_ids and leave_idds:
            self.total_start_date = leave_ids[0].start_date
            self.total_end_date = leave_idds[0].end_date

    @api.depends('total_start_date', 'total_end_date')
    def _computes_nos_of_leavesss(self):
        self.total_no_of_days = 0.0
        for rec in self:
            if rec.total_end_date and rec.total_start_date:
                rec.total_no_of_days = float((rec.total_end_date - rec.total_start_date).days + 1)

    @api.depends('faculty_staff_id')
    def _show_aar_scoringg(self):
        for rec in self:
            if rec.faculty_staff_id:
                aar_scoring = self.env['odoocms.hr.emp.aar'].sudo().search(
                    [('faculty_staff_id', '=', rec.faculty_staff_id.id)], limit=1, order='id desc')
                if aar_scoring:
                    rec.aar_idd = aar_scoring.hr_emp_aar_score
                    rec.aar_yearr = aar_scoring.hr_emp_aar_year.year

    @api.depends('faculty_staff_id')
    def _get_support_staff_categoryy(self):

        if self.faculty_staff_id.ebps.hr_scale_no in ['17', '18', '19', '20', '21', '22']:
            self.support_staff_category_idd = 'Officer'
        elif self.faculty_staff_id.ebps.hr_scale_no in ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10',
                                                        '11', '12',
                                                        '13', '14', '15', '16']:
            self.support_staff_category_idd = 'NG Staff'
        else:
            self.support_staff_category_idd = ''

    @api.depends('faculty_staff_id')
    def _get_ipfp_project_facultyy(self):
        self.projects_ipfpp = None
        projects_ipfp = None
        if self.faculty_staff_id:
            emp_record = self.env['odoocms.hr.emp.rec.master'].sudo().search(
                [('faculty_staff_id.id', '=', self.faculty_staff_id.id), ('hr_emp_status', '=', 'A'),
                 ('hr_emp_project', '=', 'I')])
            if emp_record and self.faculty_staff_id.employee_category == 'F':
                projects_ipfp = \
                    dict(emp_record.fields_get(allfields=['hr_emp_project'])['hr_emp_project']['selection'])[
                        emp_record.hr_emp_project]
            self.projects_ipfpp = projects_ipfp

    @api.depends('urgent_leave')
    def _get_urgent_leave_tag(self):
        for record in self:
            # self.urgent_word_used = None
            if record.urgent_leave:
                record.urgent_word_used = '<b>Urgent Leave</b>'
            else:
                record.urgent_word_used = ''

    @api.depends('leave_ids')
    def _medical_attachment_show(self):
        self.medi_attachment_show = False
        medical_attachment_show = False
        for leaves in self.leave_ids.leave_type_id:
            if leaves:
                if leaves.code == 'Med':
                    medical_attachment_show = True
                self.medi_attachment_show = medical_attachment_show

    @api.depends('country_id')
    def _get_leave_country_change_hec(self):
        show_hec_field = False
        if self.country_id.id == 19 or self.country_id.id == 227 or self.country_id.id == 104:
            show_hec_field = True
        self.show_hec_field = show_hec_field

    @api.depends('leave_ids')
    def _get_leave_type_study_letter(self):
        show_study_leave_letter_button = False
        for leaves in self.leave_ids.leave_type_id:
            if leaves.code == 'SL':
                show_study_leave_letter_button = True
        self.show_study_leave_letter_button = show_study_leave_letter_button

    @api.depends('faculty_staff_id')
    def _get_contract_age(self):
        contract_date = None
        self.employee_contract_age = None
        self.contract_show = False
        contract_show = False
        if self.faculty_staff_id:
            employee_contract = self.env['odoocms.hr.emp.contract.renew'].sudo().search(
                [('faculty_staff_id.id', '=', self.faculty_staff_id.id),
                 ('hr_emp_con_status', '=', 'A')])
            if employee_contract:
                if self.faculty_staff_id.hr_emp_type == 'C' and self.faculty_staff_id.employee_category == 'S':
                    contract_date = employee_contract.hr_emp_con_end_dt
                self.employee_contract_age = contract_date

            if self.faculty_staff_id.employee_category == 'S':
                contract_show = True
            self.contract_show = contract_show

    @api.depends('faculty_staff_id', 'leave_ids')
    def _get_retirement_age(self):
        retirement_year = None
        new_date_of_birth = None
        self.employee_retirement_age = None
        current_year = date.today().year
        self.retirement_show = False
        retirement_show = False

        if self.faculty_staff_id:
            for leaves in self.leave_ids.leave_type_id.leave_master_id:
                if leaves.code == 'EL' or leaves.code == 'EOL' or leaves.code == 'EPL':
                    if self.faculty_staff_id.hr_emp_type and self.faculty_staff_id.hr_emp_type == 'R':
                        if self.faculty_staff_id.birthday:
                            new_date_of_birth = self.faculty_staff_id.birthday + timedelta(days=60 * 365 + 15)
                            # retirement_year = self.faculty_staff_id.birthday.year + 60
                        self.employee_retirement_age = new_date_of_birth
                        self._get_service_filed_show()
                    elif self.faculty_staff_id.hr_emp_type and self.faculty_staff_id.hr_emp_type == 'C':
                        if self.faculty_staff_id.birthday:
                            new_date_of_birth = self.faculty_staff_id.birthday + timedelta(days=65 * 365 + 16)
                            # retirement_year = self.faculty_staff_id.birthday.year + 20
                        self.employee_retirement_age = new_date_of_birth
                        self._get_service_filed_show()
                    self.retirement_show = True

    @api.depends('faculty_staff_id', 'leave_ids')
    def _get_job_status_faculty_resigned(self):
        self.faculty_job_status_resigned = False
        self.faculty_job_status_retired = False
        faculty_job_status_resigned = None
        faculty_job_status_retired = None
        if self.faculty_staff_id:
            emp_record = self.env['odoocms.hr.emp.rec.master'].sudo().search(
                [('faculty_staff_id.id', '=', self.faculty_staff_id.id), ('hr_emp_status', '=', 'A')])
            for leaves in self.leave_ids.leave_type_id.leave_master_id:
                if leaves.code == 'EL' or leaves.code == 'EOL' or leaves.code == 'EPL':
                    if emp_record.hr_emp_at_status.code == 'RES':
                        faculty_job_status_resigned = True
                        faculty_job_status_retired = False

            self.faculty_job_status_resigned = faculty_job_status_resigned
            self.faculty_job_status_retired = faculty_job_status_retired



    @api.depends('faculty_staff_id')
    def _get_tts_effective_date(self):
        years = None
        duration_diff = None
        tts_effective_date_attached = None
        ttt_faculty_type = False
        self.ttt_faculty_type = False
        tts_effective_date = False
        self.tts_effective_date = False
        self.tts_effective_date_attached = None

        if self.faculty_staff_id:
            emp_record = self.env['odoocms.hr.emp.rec.master'].sudo().search(
                [('faculty_staff_id.id', '=', self.faculty_staff_id.id), ('hr_emp_status', '=', 'A')])
            current_date = date.today()
            if emp_record:
                if emp_record.hr_emp_at_status.code == 'TTT':
                    self.tts_effective_date_attached = emp_record.hr_emp_eff_from_dt
                    duration_diff = relativedelta(current_date, emp_record.hr_emp_eff_from_dt)
                    years = duration_diff.years
                    if years < 3:
                        tts_effective_date = True
                    self.tts_effective_date = tts_effective_date
            if self.faculty_job_status == "('TENURE TRACK',)":
                ttt_faculty_type = True
            self.ttt_faculty_type = ttt_faculty_type

    @api.depends('faculty_staff_id', 'leave_ids')
    def _get_service_filed_show(self):
        show_service_field = False
        self.show_service_field = False
        current_date = date.today()

        joining_record = self.env['odoocms.faculty.staff'].search(
            [('id', '=', self.faculty_staff_id.id)
             ])
        if joining_record:
            service_year = datetime.strptime(joining_record.employed_from, "%Y-%m-%d").date()
            current_service_year = current_date.year - service_year.year
            for leaves in self.leave_ids.leave_type_id:
                if current_service_year < int(leaves.service_duration):
                    show_service_field = True
        self.show_service_field = show_service_field

    @api.depends('faculty_staff_id')
    def _get_prob_faculty_data(self):
        duration_diff = None
        months = None
        show_probation_detailss = False
        self.show_probation_detailss = False
        current_date = date.today()
        if self.faculty_staff_id:
            emp_rec_id = self.env['odoocms.hr.emp.probation'].sudo().search(
                [('faculty_staff_id.id', '=', self.faculty_staff_id.id)], limit=1, order='id desc')
            if emp_rec_id:

                if emp_rec_id.hr_emp_prob_end_dt and current_date <= emp_rec_id.hr_emp_prob_end_dt:
                    show_probation_detailss = True
                self.show_probation_detailss = show_probation_detailss
                if not emp_rec_id.hr_emp_prob_end_dt:
                    show_probation_detailss = True
                self.show_probation_detailss = show_probation_detailss

    @api.depends('faculty_staff_id')
    def _get_job_status_faculty(self):
        self.faculty_job_status = None
        faculty_job_status = None
        if self.faculty_staff_id:
            emp_record = self.env['odoocms.hr.emp.rec.master'].sudo().search(
                [('faculty_staff_id.id', '=', self.faculty_staff_id.id), ('hr_emp_status', '=', 'A')])
            if self.faculty_staff_id.employee_category == 'F':
                faculty_job_status = \
                dict(emp_record.fields_get(allfields=['hr_emp_sub_cat'])['hr_emp_sub_cat']['selection'])[
                    emp_record.hr_emp_sub_cat]
                # faculty_job_status = emp_record.hr_emp_sub_cat.get_label()
            self.faculty_job_status = faculty_job_status

    @api.depends('faculty_staff_id')
    def _get_emp_type_status_faculty(self):
        self.faculty_emp_type = None
        faculty_emp_type = None
        if self.faculty_staff_id:
            emp_record = self.env['odoocms.hr.emp.rec.master'].sudo().search(
                [('faculty_staff_id.id', '=', self.faculty_staff_id.id), ('hr_emp_status', '=', 'A')])
            faculty_emp_type = \
                dict(emp_record.fields_get(allfields=['hr_emp_type'])['hr_emp_type']['selection'])[
                    emp_record.hr_emp_type]
            # faculty_job_status = emp_record.hr_emp_sub_cat.get_label()
            self.faculty_emp_type = faculty_emp_type





    @api.depends('comment_ids', 'state')
    def _compute_users(self):
        curr_user = None
        prev_user = None
        if self.comment_ids:
            comment_ids = self.env['cms.hr.emp.leave.comments'].search(
                [('emp_leave_id.id', '=', self.id), ('action', '=', 'Leave entry')])
            if self.comment_ids:
                if self.state == 'sanction':
                    if comment_ids:
                        prev_user = self.curr_user
                        self.prev_user = prev_user
                        curr_user = comment_ids.create_uid
                    self.curr_user = curr_user

    @api.depends('faculty_staff_id')
    def _get_emp_fields(self):
        show_faculty_fields = False
        self.show_emp_fields = False
        self.faculty_fac_type = False
        show_emp_fields = False
        if self.faculty_staff_id:
            if self.faculty_staff_id.employee_category == 'F':
                show_faculty_fields = True
                self.faculty_fac_type = show_faculty_fields
                self.show_emp_fields = False
            elif self.faculty_staff_id.employee_category == 'S':
                show_emp_fields = True
                self.show_emp_fields = show_emp_fields
                self.faculty_fac_type = False